<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gh Ost on code.openark.org</title>
    <link>/blog/tags/gh-ost/</link>
    <description>Recent content in Gh Ost on code.openark.org</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Wed, 28 Sep 2016 14:22:14 +0000</lastBuildDate>
    <atom:link href="/blog/tags/gh-ost/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Three wishes for a new year</title>
      <link>/blog/mysql/three-wishes-for-a-new-year-4</link>
      <pubDate>Wed, 28 Sep 2016 14:22:14 +0000</pubDate>
      
      <guid>/blog/mysql/three-wishes-for-a-new-year-4</guid>
      <description>&lt;p&gt;(Almost) another new year by Jewish calendar. What do I wish for the following year?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;World peace&lt;/li&gt;
&lt;li&gt;Good health to all&lt;/li&gt;
&lt;li&gt;Relaxed GTID constraints&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I&#39;m still not using GTID, and still see operational issues with working with GTID. As a latest example, our new schema migration solution, gh-ost, allows us to test migrations in production, on replicas. The GTID catch? &lt;code&gt;gh-ost&lt;/code&gt;&amp;nbsp;has to write something to the binary log. Thus, it &#34;corrupts&#34; the replica with a bogus GTID entry that will never be met in another server, thus making said replica unsafe to promote. We can work around this, but...&lt;/p&gt;
&lt;p&gt;I understand the idea and need for the &lt;code&gt;Executed GTID Set&lt;/code&gt;. It will&amp;nbsp;certainly come in handy with multi-writer InnoDB Cluster. However for most use cases GTID poses a burden. The reason is that our topologies are imperfect, and we as humans are imperfect, and operations are most certainly imperfect. We may wish to operate on a replica: test something, by intention or mistake. We may wish to use a subchain as the seed for a new cluster split. We may wish to be able to write to downstream replicas. We may use a 3rd party tool that issues a &lt;code&gt;flush tables with read lock&lt;/code&gt;&amp;nbsp;without disabling &lt;code&gt;sql_log_bin&lt;/code&gt;. Things just happen.&lt;/p&gt;
&lt;p&gt;For that, I would like to suggest GTID control levels, such as:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;em&gt;Strict&lt;/em&gt;: same as Oracle&#39;s existing&amp;nbsp;implementation. Executed sets, purged sets, whatnot.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Last executed&lt;/em&gt;: a mode where the only thing that counts is the last executed GTID value. If I repoint replica,&amp;nbsp;all it needs to check is &#34;hey this is my last executed GTID entry, give me the coordinates of yours. And, no, I don&#39;t care about comparing executed and purged sets, I will trust you and keep running from that point on&#34;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Declarative&lt;/em&gt;: GTIDs are generated, are visible in each and every binary log entry, but are completely ignored.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I realize Oracle MySQL GTID is out for some over 3 years now, but I&#39;m sorry - I still have reservations and see&amp;nbsp;use cases where I fear it will not serve me right.&lt;/p&gt;
&lt;p&gt;How about my previous years wishes? World peace and good health never came through, however:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;My &lt;a href=&#34;http://code.openark.org/blog/mysql/three-wishes-for-a-new-year-2015&#34;&gt;2015 wish&lt;/a&gt; for &#34;decent, operations friendly built in online table refactoring&#34; was unmet, however &lt;code&gt;gh-ost&lt;/code&gt;&amp;nbsp;is a thing now and exceeds my expectations. No, really. Please come see &lt;a href=&#34;https://www.percona.com/live/plam16/sessions/introducing-gh-ost-triggerless-painless-trusted-online-schema-migrations&#34;&gt;Tom &amp;amp; myself present gh-ost&lt;/a&gt; and how it changed our migration paradigm.&lt;/li&gt;
&lt;li&gt;My &lt;a href=&#34;http://code.openark.org/blog/mysql/three-wishes-for-a-new-year-201&#34;&gt;2012 wish&lt;/a&gt; for &#34;decent, long waited for, implementation of &lt;a href=&#34;http://en.wikipedia.org/wiki/Window_function_%28SQL%29#Window_function&#34;&gt;Window Functions&lt;/a&gt; (aka Analytic Functions) for MySQL&#34; was met by&amp;nbsp;MariaDB&#39;s &lt;a href=&#34;https://mariadb.com/kb/en/mariadb/window-functions/&#34;&gt;window functions&lt;/a&gt;.&lt;br&gt;
Not strictly Window Functions, but Oracle MySQL 8.0 will &lt;a href=&#34;http://mysqlserverteam.com/mysql-8-0-labs-recursive-common-table-expressions-in-mysql-ctes/&#34;&gt;support CTE&lt;/a&gt; (hierarchial/recursive), worth a mention.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See you in Amsterdam!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>gh-ost 1.0.17: Hooks, Sub-second lag control, Amazon RDS and more</title>
      <link>/blog/mysql/gh-ost-1-0-17-hooks-sub-second-lag-control-amazon-rds-and-more</link>
      <pubDate>Tue, 06 Sep 2016 11:44:14 +0000</pubDate>
      
      <guid>/blog/mysql/gh-ost-1-0-17-hooks-sub-second-lag-control-amazon-rds-and-more</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/github/gh-ost&#34;&gt;gh-ost&lt;/a&gt; version &lt;a href=&#34;https://github.com/github/gh-ost/releases/tag/v1.0.17&#34;&gt;1.0.17&lt;/a&gt; is now released, with various additions and fixes. Here are some notes of interest:&lt;/p&gt;
&lt;h3&gt;Hooks&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;gh-ost&lt;/code&gt; now supports &lt;a href=&#34;https://github.com/github/gh-ost/blob/master/doc/hooks.md&#34;&gt;hooks&lt;/a&gt;. These are your own executables that &lt;code&gt;gh-ost&lt;/code&gt; will invoke at particular points of interest (validation pass, about to cut-over, success, failure, status, etc.)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gh-ost&lt;/code&gt; will set various environment variables for your executables to pick up, passing along such information as migrated/&lt;em&gt;ghost&lt;/em&gt; table name, elapsed time, processed rows, migrated host etc.&lt;/p&gt;
&lt;h3&gt;Sub-second lag control&lt;/h3&gt;
&lt;p&gt;At GitHub we&#39;re very strict about replication lag. We keep it well under &lt;code&gt;1&lt;/code&gt; second at most times. &lt;code&gt;gh-ost&lt;/code&gt; can now identify &lt;a href=&#34;https://github.com/github/gh-ost/blob/master/doc/subsecond-lag.md&#34;&gt;sub-second lag on replicas&lt;/a&gt; (well, you need to supply with the right query). Our current production migrations are set by default with &lt;code&gt;--max-lag-millis=500&lt;/code&gt; or less, and our most intensive migrations keep replication lag well below &lt;code&gt;1sec&lt;/code&gt; or even below &lt;code&gt;500ms&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;No SUPER&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;SUPER&lt;/code&gt; privilege is required to &lt;code&gt;set global binlog_format=&#39;ROW&#39;&lt;/code&gt; and for &lt;code&gt;STOP SLAVE; START SLAVE;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you &lt;em&gt;know&lt;/em&gt; your replica has RBR, you can pass &lt;code&gt;--assume-rbr&lt;/code&gt; and skips those steps.&lt;/p&gt;
&lt;h3&gt;RDS&lt;/h3&gt;
&lt;p&gt;Hooks + No Super = RDS, as seems to be the case. For &lt;code&gt;--test-on-replica&lt;/code&gt; you will need to supply your own &lt;code&gt;gh-ost-on-stop-replication&lt;/code&gt; hook, to stop your RDS replica at cut-over phase. See &lt;a href=&#34;https://github.com/github/gh-ost/issues/163#issuecomment-244694616&#34;&gt;this tracking issue&lt;/a&gt;&lt;!--more--&gt;&lt;/p&gt;
&lt;h3&gt;master-master&lt;/h3&gt;
&lt;p&gt;While active-active are still not supported, you now have greater control over master-master topologies by being able to explicitly pick your master (as &lt;code&gt;gh-ost&lt;/code&gt; arbitrarily picks one of the co-masters). Do so by passing &lt;code&gt;--assume-master-host&lt;/code&gt;. See &lt;a href=&#34;https://github.com/github/gh-ost/blob/master/doc/cheatsheet.md&#34;&gt;cheatsheet&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;tungsten replicator&lt;/h3&gt;
&lt;p&gt;Similarly, &lt;code&gt;gh-ost&lt;/code&gt; cannot crawl your &lt;code&gt;tungsten&lt;/code&gt; topology, and you are able to specify &lt;code&gt;--tungsten --assume-master-host=the.master.com&lt;/code&gt;. See &lt;a href=&#34;https://github.com/github/gh-ost/blob/master/doc/cheatsheet.md&#34;&gt;cheatsheet&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Concurrent-rowcount&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;--exact-rowcount&lt;/code&gt; is awesomeness, keeping quite accurate estimate of progress. With &lt;code&gt;--concurrent-rowcount&lt;/code&gt; we begin migration with a rough estimate, and execute &lt;code&gt;select count(*) from your_table&lt;/code&gt; in parallel, updating our estimate later on throughout the migration&lt;/p&gt;
&lt;h3&gt;Stricter, safer&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;gh-ost&lt;/code&gt; works in &lt;code&gt;STRICT_ALL_TABLES&lt;/code&gt; mode, meaning it would fail rather than set the wrong value to a column.&lt;/p&gt;
&lt;p&gt;In addition to unit-testing and production continuous test, a set of &lt;a href=&#34;https://github.com/github/gh-ost/blob/master/doc/local-tests.md&#34;&gt;local tests&lt;/a&gt; is growing, hopefully to run as CI tests later on.&lt;/p&gt;
&lt;h3&gt;Fixed problems&lt;/h3&gt;
&lt;p&gt;Fixed &lt;code&gt;time_zone&lt;/code&gt; related bug, high &lt;code&gt;unsigned&lt;/code&gt; values bug; added strict check for triggers, relaxed config file parsing, and more. Thank you to community contributors for PRs, from &lt;code&gt;ipv6&lt;/code&gt; to typos!&lt;/p&gt;
&lt;h3&gt;Known issues&lt;/h3&gt;
&lt;p&gt;Issues coming and going at all times -- thank you for reporting Issues!&lt;/p&gt;
&lt;p&gt;We have a confirmed &lt;a href=&#34;https://github.com/github/gh-ost/issues/226&#34;&gt;bug with non-UTF charsets&lt;/a&gt; at this time. Some other minor issues and feature requests are open -- we&#39;ll take them as we go along.&lt;/p&gt;
&lt;h3&gt;Feedback requests&lt;/h3&gt;
&lt;p&gt;We are not testing &lt;code&gt;gh-ost&lt;/code&gt; on RDS ourselves. We appreciate community feedback on &lt;a href=&#34;https://github.com/github/gh-ost/issues/163&#34;&gt;this tracking issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We are not testing &lt;code&gt;gh-ost&lt;/code&gt; on Galera/XtraDB cluster ourselves. We appreciate community feedback on &lt;a href=&#34;https://github.com/github/gh-ost/issues/224&#34;&gt;this tracking issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We value submitted Issues and questions.&lt;/p&gt;
&lt;h3&gt;Speaking&lt;/h3&gt;
&lt;p&gt;We will be presenting &lt;code&gt;gh-ost&lt;/code&gt; in the next month:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I will be &lt;a href=&#34;http://githubuniverse.com/program/sessions/#gh-ost&#34;&gt;presenting gh-ost at GitHub Universe&lt;/a&gt;, Sep. 14th&lt;/li&gt;
&lt;li&gt;Tom Krouper will be &lt;a href=&#34;https://datalayer.com/&#34;&gt;presenting gh-ost at DataLayer&lt;/a&gt;, Seattle, Sep 28th&lt;/li&gt;
&lt;li&gt;Tom Krouper and myself will be &lt;a href=&#34;https://www.percona.com/live/plam16/sessions/introducing-gh-ost-triggerless-painless-trusted-online-schema-migrations&#34;&gt;presenting gh-ost at PerconaLive&lt;/a&gt;, Amsterdam, Oct 5th&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hope to see you there, and thank you again to all contributors!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>