<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hacks on code.openark.org</title>
    <link>/blog/tags/hacks/</link>
    <description>Recent content in Hacks on code.openark.org</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Fri, 25 Nov 2011 21:39:58 +0000</lastBuildDate>
    <atom:link href="/blog/tags/hacks/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Reading results of SHOW statements, on server side</title>
      <link>/blog/mysql/reading-results-of-show-statements-on-server-side/</link>
      <pubDate>Fri, 25 Nov 2011 21:39:58 +0000</pubDate>
      
      <guid>/blog/mysql/reading-results-of-show-statements-on-server-side/</guid>
      <description>&lt;p&gt;&lt;strong&gt;SHOW&lt;/strong&gt; statements are show stoppers on server side. While clients can get a &lt;a href=&#34;http://dev.mysql.com/doc/refman/5.1/en/show.html&#34;&gt;SHOW statement&lt;/a&gt; as a result set just as any normal &lt;strong&gt;SELECT&lt;/strong&gt;, things are not as such on server side.&lt;/p&gt;
&lt;p&gt;On server side, that is, from within MySQL itself, one &lt;em&gt;cannot&lt;/em&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;SELECT `Database` FROM (SHOW DATABASES);&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;One &lt;em&gt;cannot&lt;/em&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;DECLARE show_cursor CURSOR FOR SHOW TABLES;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;One &lt;em&gt;cannot&lt;/em&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;SHOW TABLES INTO OUTFILE &#39;/tmp/my_file.txt&#39;;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;So it is impossible to get the results with a query; impossible to get the results from a stored routine; impossible to get the results by file reading...&lt;/p&gt;
&lt;h4&gt;Bwahaha! A hack!&lt;/h4&gt;
&lt;p&gt;For some &lt;strong&gt;SHOW&lt;/strong&gt; statements, there is a way around this. I&#39;ve been banging my head against the wall for weeks now on this. Now I have a partial solution: I&#39;m able to read &lt;strong&gt;SHOW&lt;/strong&gt; output for several &lt;strong&gt;SHOW&lt;/strong&gt; statements. Namely, those &lt;strong&gt;SHOW&lt;/strong&gt; statements &lt;a href=&#34;http://dev.mysql.com/doc/refman/5.1/en/extended-show.html&#34;&gt;which allow a LIKE or a WHERE&lt;/a&gt; clause.&lt;/p&gt;
&lt;p&gt;For example, most are familiar with the following syntax:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;USE mysql;
SHOW TABLE STATUS LIKE &#39;user&#39;;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;However not so many know that any &lt;strong&gt;SHOW&lt;/strong&gt; statement which accepts &lt;strong&gt;LIKE&lt;/strong&gt;, can also accept &lt;strong&gt;WHERE&lt;/strong&gt;:&lt;!--more--&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;SHOW TABLE STATUS WHERE Name=&#39;user&#39;\G
*************************** 1. row ***************************
           Name: user
         Engine: MyISAM
        Version: 10
     Row_format: Dynamic
           Rows: 17
 Avg_row_length: 69
    Data_length: 1184
Max_data_length: 281474976710655
   Index_length: 2048
      Data_free: 0
 Auto_increment: NULL
    Create_time: 2010-10-03 08:23:48
    Update_time: 2011-07-30 19:31:00
     Check_time: NULL
      Collation: utf8_bin
       Checksum: NULL
 Create_options:
        Comment: Users and global privileges&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;It&#39;s not just about &#34;&lt;strong&gt;Name&lt;/strong&gt;&#34;. I can filter using any column I like:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;SHOW TABLE STATUS WHERE Rows &amp;gt; 1000;
SHOW TABLE STATUS WHERE Rows &amp;gt; 1000 AND Index_length &amp;gt; 65536;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;etc.&lt;/p&gt;
&lt;p&gt;If you&#39;ve been to my talk on &lt;a href=&#34;http://www.percona.com/live/london-2011/session/programmatic-queries-things-you-can-code-with-sql/&#34;&gt;Programmatic Queries: things you can code with SQL&lt;/a&gt;, you have a good guess as for where I&#39;m taking this.&lt;/p&gt;
&lt;h4&gt;Where there&#39;s WHERE, there&#39;s code&lt;/h4&gt;
&lt;p&gt;I can write code within the &lt;strong&gt;WHERE&lt;/strong&gt; clause. Specifically, I can work with user defined variables. Shall we cut to the point and provide with an example?&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;mysql&amp;gt; SET @databases := &#39;&#39;;

mysql&amp;gt; SHOW DATABASES WHERE (@databases := CONCAT(@databases, `Database`, &#39;,&#39;)) IS NULL;

mysql&amp;gt; SELECT @databases;
+-------------------------------------------------------------------+
| @databases                                                        |
+-------------------------------------------------------------------+
| information_schema,common_schema,mycheckpoint,mysql,sakila,world, |
+-------------------------------------------------------------------+&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let&#39;s discuss the above. We:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set a user variables called &lt;strong&gt;@databases&lt;/strong&gt; to an empty text&lt;/li&gt;
&lt;li&gt;Iterate through the &lt;strong&gt;SHOW DATABASES&lt;/strong&gt; rowset. The &lt;strong&gt;WHERE&lt;/strong&gt; clause is always &lt;em&gt;false&lt;/em&gt; (the expression is in fact &lt;strong&gt;NOT NULL&lt;/strong&gt; for all rows), so rows are not printed out, and we get an empty result set (we&#39;re not really interested in a result set here, since there&#39;s no way to read it anyhow).&lt;/li&gt;
&lt;li&gt;However we do take care to &#34;remember&#34; the value we visit, by concatenating the &lt;strong&gt;`Database`&lt;/strong&gt; column value.&lt;/li&gt;
&lt;li&gt;We end up with a delimited string of database names. You&#39;ll forgive the ending &lt;strong&gt;&#39;,&#39;&lt;/strong&gt;. This is just a simple example, it is of no importance.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Further notes&lt;/h4&gt;
&lt;p&gt;What can we do with the concatenated list of database names? Whatever we want to. We can parse it again, &lt;strong&gt;INSERT&lt;/strong&gt; it &lt;strong&gt;INTO&lt;/strong&gt; some table, save to file, iterate, what have you!&lt;/p&gt;
&lt;p&gt;We can wrap the above in a stored routine. Alas, not with a stored function, since the &lt;strong&gt;SHOW&lt;/strong&gt; command, although returns with an empty result set, does return with a result set, not allowed withing functions.&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;Limitations&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Sadly, &lt;strong&gt;SHOW SLAVE STATUS&lt;/strong&gt;, &lt;strong&gt;SHOW MASTER LOGS&lt;/strong&gt; etc., do not support &lt;strong&gt;LIKE&lt;/strong&gt; or &lt;strong&gt;WHERE&lt;/strong&gt; syntax. Bummer.&lt;/li&gt;
&lt;li&gt;Stored functions, as just mentioned, cannot utilize this hack. Hey, I&#39;m still working on this!&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;To what use?&lt;/h4&gt;
&lt;p&gt;Originally I wanted to avoid the time &amp;amp; locking it takes for &lt;strong&gt;INFORMATION_SCHEMA&lt;/strong&gt; queries, such as on &lt;strong&gt;TABLES&lt;/strong&gt;, &lt;strong&gt;COLUMNS&lt;/strong&gt;, etc. Ironically, in a few days apart I&#39;ve found &lt;em&gt;another&lt;/em&gt; interesting solution (well, two, actually) to manage reads from &lt;strong&gt;INFORMATION_SCHEMA&lt;/strong&gt; with less overhead than in normal use. I&#39;ll talk about that another time; am about to use this in &lt;a href=&#34;http://code.google.com/p/common-schema/&#34; rel=&#34;nofollow&#34;&gt;common_schema&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Further notes&lt;/h4&gt;
&lt;p&gt;I met &lt;a href=&#34;http://rpbouman.blogspot.com/&#34;&gt;Roland&lt;/a&gt; in &lt;a href=&#34;http://www.percona.com/live/london-2011/&#34;&gt;London&lt;/a&gt;, and he liked the solution. As &lt;a href=&#34;http://www.mysqlperformanceblog.com/author/baron/&#34;&gt;Baron&lt;/a&gt; joined, Roland said: &#34;Baron, do you know Shlomi devised a method to read the output of &lt;strong&gt;SHOW&lt;/strong&gt; commands?&#34;&lt;/p&gt;
&lt;p&gt;And Baron said: &#34;Without using files? Then a &lt;strong&gt;SHOW&lt;/strong&gt; statement can have a &lt;strong&gt;WHERE&lt;/strong&gt; clause, in which case you can use a variable&#34;, and went on looking for his wife.&lt;/p&gt;
&lt;p&gt;And we remained speechless.&lt;/p&gt;
&lt;p&gt;[UPDATE: I&#39;ve manually changed timestamp of this post due to failure in its aggregation in planet.mysql, being a major source of incoming traffic to this site]&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>