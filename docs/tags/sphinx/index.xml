<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sphinx on code.openark.org</title>
    <link>/blog/tags/sphinx/</link>
    <description>Recent content in Sphinx on code.openark.org</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Tue, 03 Apr 2012 13:05:42 +0000</lastBuildDate>
    <atom:link href="/blog/tags/sphinx/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Thoughts on using MySQL plugins</title>
      <link>/blog/2012/04/03/thoughts-on-using-mysql-plugins/</link>
      <pubDate>Tue, 03 Apr 2012 13:05:42 +0000</pubDate>
      
      <guid>/blog/2012/04/03/thoughts-on-using-mysql-plugins/</guid>
      <description>&lt;p&gt;I&#39;m giving thoughts on the viability of MySQL plugins. This is due to a particular experience I&#39;ve had, which is thankfully solved. However, it left some bitter taste in my mouth.&lt;/p&gt;
&lt;p&gt;MySQL plugins are a tricky business. To create a plugin, you must compile it against the MySQL version you wish the users to use it with. Theoretically, you should compile it against any existing MySQL version, minors as well (I&#39;m not sure whether it may sometimes or most times work across minor versions).&lt;/p&gt;
&lt;p&gt;But, most important, you must adapt your plugin to major versions.&lt;/p&gt;
&lt;p&gt;Another option for plugin makers, is to actually &lt;em&gt;not&lt;/em&gt; recompile it, but rather provide with the source code, and let the end user compile it with her own MySQL version. But here, too, the code must be compatible with whatever changes the new MySQL version may have.&lt;/p&gt;
&lt;h4&gt;And if it doesn&#39;t compile with the new MySQL version?&lt;/h4&gt;
&lt;p&gt;That&#39;s what happened to me. The particular case at hand was SphinxSE, a plugin which serves as a bridge between MySQL and a &lt;a href=&#34;http://sphinxsearch.com/&#34;&gt;Sphinx Search&lt;/a&gt; server. I&#39;ve been using it for years and was happy about it. But, as it happened, it took well over a year for sphinx to compile with MySQL &lt;strong&gt;5,5&lt;/strong&gt;. This meant I was unable to upgrade my &lt;strong&gt;5.1&lt;/strong&gt; installation to &lt;strong&gt;5.5&lt;/strong&gt;, a thing I was aiming to do for quite a while.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Even when fixed, not all features were included, and thankfully I was able to come up with &lt;a href=&#34;http://code.openark.org/blog/mysql/sphinx-sphinx_snippets-mysql-5-5&#34;&gt;my own patch&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Not complaining about this particular project -- I think Sphinx is &lt;em&gt;awesome&lt;/em&gt;, with latest versions providing great features I&#39;m putting into immediate use.&lt;/p&gt;
&lt;p&gt;However, how much am I willing to rely on 3rd party projects when planning my MySQL upgrades? I&#39;m now thinking I shouldn&#39;t.&lt;/p&gt;
&lt;h4&gt;A central repository?&lt;/h4&gt;
&lt;p&gt;MariaDB does a great thing: it provides with several &lt;a href=&#34;http://kb.askmonty.org/en/mariadb-versus-mysql-features&#34;&gt;additional features&lt;/a&gt; over standard MySQL, including a set of plugins. They turn into a debian-like repository, in which they maintain the plugins for their own distribution.&lt;/p&gt;
&lt;p&gt;[&lt;em&gt;Darn!&lt;/em&gt; I just realized I should have looked at what they did with Sphinx in their &lt;strong&gt;5.5&lt;/strong&gt; distribution! Need to do my monthly mental examination.]&lt;/p&gt;
&lt;p&gt;Anyway, this is something I would like to see outside MariaDB as well: a central repository where plugins are maintained and kept up to the latest releases.&lt;/p&gt;
&lt;p&gt;Thoughts, anyone?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sphinx, sphinx_snippets() &amp; MySQL 5.5</title>
      <link>/blog/2012/03/21/sphinx-sphinx_snippets-mysql-5-5/</link>
      <pubDate>Wed, 21 Mar 2012 15:57:59 +0000</pubDate>
      
      <guid>/blog/2012/03/21/sphinx-sphinx_snippets-mysql-5-5/</guid>
      <description>&lt;p&gt;I&#39;ve written a patch which completes Sphinx&#39;s integration with MySQL &lt;strong&gt;5.5&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Up until a couple months ago, Sphinx would not compile with MySQL &lt;strong&gt;5.5&lt;/strong&gt; at all. This is, thankfully, resolved as of Sphinx &lt;strong&gt;2.0.3&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;However, to my disdain, I&#39;ve found out that it only partially work: the &lt;a href=&#34;http://sphinxsearch.com/docs/manual-2.0.4.html#sphinxse-snippets&#34;&gt;sphinx_snippets()&lt;/a&gt; user defined function is not included within the plugin library. After some quick poking I discovered that it was not added to the build, and when added, would not compile.&lt;/p&gt;
&lt;p&gt;I rely on &lt;strong&gt;sphinx_snippets()&lt;/strong&gt; quite a lot, and like it. Eventually I wrote the fix to the &lt;strong&gt;snippets_udf.cc&lt;/strong&gt; which allows it to run in a MySQL &lt;strong&gt;5.5&lt;/strong&gt; server.&lt;/p&gt;
&lt;p&gt;Here are the changes for the &lt;strong&gt;2.0.4&lt;/strong&gt; version of Sphinx:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://code.openark.org/blog/wp-content/uploads/2012/03/snippets_udf.cc&#34;&gt;snippets_udf.cc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://code.openark.org/blog/wp-content/uploads/2012/03/CMakeLists.txt&#34;&gt;CMakeLists.txt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Replace your &lt;strong&gt;2.0.4&lt;/strong&gt; files with these two and get on compiling your MySQL server.&lt;/p&gt;
&lt;h4&gt;Compilation guide&lt;/h4&gt;
&lt;p&gt;For completeness, here&#39;s how to compile Percona Server &lt;strong&gt;5.5&lt;/strong&gt; with Sphinx &lt;strong&gt;2.0.4&lt;/strong&gt; including the above patches:&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Get &lt;a href=&#34;http://www.percona.com/downloads/Percona-Server-5.5/LATEST/&#34;&gt;Percona Server source code&lt;/a&gt; and &lt;a href=&#34;http://sphinxsearch.com/downloads/release/&#34;&gt;Sphinx Search source code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I&#39;ll be using Percona Server &lt;strong&gt;5.5.21-25.0&lt;/strong&gt;. I use &lt;strong&gt;/data/tmp/mysql&lt;/strong&gt; as compilation path, and install MySQL on &lt;strong&gt;/usr/local/mysql55&lt;/strong&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;mkdir -p /data/tmp/mysql
cd /data/tmp/mysql
tar xzfv Percona-Server-5.5.21-rel25.0.tar.gz
tar xzfv sphinx-2.0.4-release.tar.gz
cd Percona-Server-5.5.21-rel25.0/
cp -R /data/tmp/mysql/sphinx-2.0.4-release/mysqlse storage/sphinx&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Overwrite with patched files included in this post:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;cp /tmp/CMakeLists.txt storage/sphinx/CMakeLists.txt
cp /tmp/snippets_udf.cc storage/sphinx/snippets_udf.cc&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Build MySQL:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;sh BUILD/autorun.sh
./configure --with-plugin-sphinx --prefix=/usr/local/mysql55
make
sudo make install&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Install the mysql55 service:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;cd /usr/local/mysql55
sudo cp support-files/mysql.server /etc/init.d/mysql55&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;In &lt;strong&gt;/etc/bash.bashrc&lt;/strong&gt;, add:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;export PATH=/usr/local/mysql55/bin:${PATH}&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Start MySQL:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;sudo service mysql55 start&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Login to MySQL as an administrato (typically &lt;strong&gt;root&lt;/strong&gt;) and install Sphinx:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;mysql&amp;gt; INSTALL PLUGIN sphinx SONAME &#39;ha_sphinx.so&#39;;
mysql&amp;gt; CREATE FUNCTION sphinx_snippets RETURNS STRING SONAME &#39;ha_sphinx.so&#39;;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Notes&lt;/h4&gt;
&lt;p&gt;See also &lt;a href=&#34;http://sphinxsearch.com/bugs/view.php?id=1090&#34;&gt;http://sphinxsearch.com/bugs/view.php?id=1090&lt;/a&gt; and &lt;a href=&#34;http://sphinxsearch.com/forum/view.html?id=8982&#34;&gt;http://sphinxsearch.com/forum/view.html?id=8982&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sphinx &amp; MySQL: facts and misconceptions</title>
      <link>/blog/2010/09/02/sphinx-mysql-facts-and-misconceptions/</link>
      <pubDate>Thu, 02 Sep 2010 10:56:15 +0000</pubDate>
      
      <guid>/blog/2010/09/02/sphinx-mysql-facts-and-misconceptions/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.sphinxsearch.com/&#34;&gt;Sphinx search&lt;/a&gt; is a full text search engine, commonly used with MySQL.&lt;/p&gt;
&lt;p&gt;There are some misconceptions about Sphinx and its usage. Following is a list of some of Sphinx&#39; properties, hoping to answer some common questions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sphinx is not part of MySQL/Oracle.&lt;/li&gt;
&lt;li&gt;It is a standalone server; an external application to MySQL.&lt;/li&gt;
&lt;li&gt;Actually, it is not MySQL specific. It can work with other RDBMS: PostgreSQL, MS SQL Server.&lt;/li&gt;
&lt;li&gt;And, although described as &#34;free open-source SQL full-text search engine&#34;, it is not SQL-specific: Sphinx can read documents from XML.&lt;/li&gt;
&lt;li&gt;It is often described as &#34;full text search for InnoDB&#34;. This description  is misleading. Sphinx indexes text; be it from any storage engine or  external source. It solves, in a way, the issue of &#34;FULLTEXT is only  supported by MyISAM&#34;. Essentially, it provided full-text indexing for InnoDB tables, but in a &lt;em&gt;very&lt;/em&gt; different way than the way MyISAM&#39;s &lt;strong&gt;FULLTEXT&lt;/strong&gt; index works.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sphinx works by reading documents, usually from databases. Considering the case of MySQL, Sphinx issues a SQL query which retrieves relevant data (mostly the text you want to index, but other properties allowed).&lt;!--more--&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Being an external module, it does not update its indexes on the fly. So  if &lt;strong&gt;10&lt;/strong&gt; new rows are &lt;strong&gt;INSERT&lt;/strong&gt;ed, it has no knowledge of this. It must be  called externally to re-read the data (or just read the new data), and re-index.
&lt;ul&gt;
&lt;li&gt;This is perhaps the greatest difference, functionality-wise, between Sphinx and MyISAM&#39;s &lt;strong&gt;FULLTEXT&lt;/strong&gt;. The latter is always updated, for every row &lt;strong&gt;INSERT&lt;/strong&gt;ed, &lt;strong&gt;DELETE&lt;/strong&gt;d or &lt;strong&gt;UPDATE&lt;/strong&gt;d. The latter also suffers by this property, as this makes for serious overhead with large volumes.&lt;/li&gt;
&lt;li&gt;There&#39;s more than one way to make that less of an issue. I&#39;ll write some more in future posts.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Sphinx does not keep the text to itself; just the index. Sphinx cannot be asked &#34;Give me the blog post content for those posts containing &#39;open source&#39;&#34;.
&lt;ul&gt;
&lt;li&gt;Sphinx will only tell you the ID (i.e. Primary Key) for the row that matches your search.&lt;/li&gt;
&lt;li&gt;It is up to you to then get the content from the table.&lt;/li&gt;
&lt;li&gt;With SphinxSE (Sphinx Storage Engine for MySQL) this becomes easier, all-in-one query.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;It can keep other numeric data. Such data can be used to filter results.&lt;/li&gt;
&lt;li&gt;It provides with &lt;strong&gt;GROUP BY&lt;/strong&gt;-like, as well as &lt;strong&gt;ORDER BY&lt;/strong&gt;-like mechanism.&lt;/li&gt;
&lt;li&gt;It allows for ordering results by relevance.&lt;/li&gt;
&lt;li&gt;It allows for exact match search, boolean search, and more.&lt;/li&gt;
&lt;li&gt;It has an API &amp;amp; implementation for popular programming languages: PHP, Python, Perl, Ruby, Java.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The above describes Sphinx as a general fulltext search engine for databases. It does, however, have special treatment for MySQL:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First and foremost, it knows how to query MySQL for data (duh!)&lt;/li&gt;
&lt;li&gt;If you don&#39;t mind compiling from source, you can rebuild MySQL with &lt;a href=&#34;http://www.sphinxsearch.com/docs/current.html#sphinxse&#34;&gt;SphinxSE&lt;/a&gt;: a storage engine implementation. This storage engine does not actually hold any data, but rather provides an SQL-like interface to the search daemon.
&lt;ul&gt;
&lt;li&gt;Thus, you can query for search results using &lt;strong&gt;SELECT&lt;/strong&gt; statements, &lt;strong&gt;JOIN&lt;/strong&gt;ing to document tables, retrieving results, all in one step.&lt;/li&gt;
&lt;li&gt;If you do mind compiling MySQL, be aware that MariaDB &lt;a href=&#34;http://askmonty.org/wiki/MariaDB_versus_MySQL&#34;&gt;comes with SphinxSE&lt;/a&gt; built in in newer versions.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;It implements the MySQL protocol. You can connect to the sphinx server using a MySQL client, and actually issue SQL statements to retrieve data. Not all SQL is supported. The valid subset is called &lt;a href=&#34;http://www.sphinxsearch.com/docs/current.html#sphinxql&#34;&gt;SphinxQL&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Snippets (excerpts) are &lt;a href=&#34;http://www.sphinxsearch.com/docs/current.html#sphinxse-snippets&#34;&gt;supported&lt;/a&gt; via MySQL UDF.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>SphinxSE 0.9.9-RC2 bug workaround</title>
      <link>/blog/2009/09/07/sphinxse-0-9-9-rc2-bug-workaround/</link>
      <pubDate>Mon, 07 Sep 2009 10:23:21 +0000</pubDate>
      
      <guid>/blog/2009/09/07/sphinxse-0-9-9-rc2-bug-workaround/</guid>
      <description>&lt;p&gt;There is a serious bug with the sphinx storage engine, introduced in 0.9.9-RC2 (and which has not been fixed in latest revisions, as yet - last checked with rev 2006).&lt;/p&gt;
&lt;p&gt;I would usually just revert to an older version (0.9.9-RC1 does not contain this bug), but for the reason that RC2 introduces an important feature: the &lt;strong&gt;sphinx_snippets()&lt;/strong&gt; function, which allows for creation of snippets from within MySQL, and which makes the sphinx integration with MySQL complete, as far as the application is concerned.&lt;/p&gt;
&lt;h4&gt;The bug&lt;/h4&gt;
&lt;p&gt;The bug is described &lt;a href=&#34;http://sphinxsearch.com/forum/view.html?id=3589&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;http://sphinxsearch.com/forum/view.html?id=4081&#34;&gt;here&lt;/a&gt; (and see further discussions). Though it&#39;s claimed to have been fixed, it&#39;s been re-reported, and I&#39;ve tried quite a few revisions and verified it has not been fixed (tested on Debian/Ubuntu x64).  &lt;span&gt;Essentially, the bug does not allow you to set filters on a query issued from within the SphinxSE. For example, the following queries fail:&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;SELECT ... FROM ... WHERE query=&#39;python;mode=any;sort=relevance;limit=200;range=myUnixTimestamp,1249506000,1252184400;&#39;
SELECT ... FROM ... WHERE query=&#39;python;mode=any;sort=relevance;limit=200;filter=my_field,1;&#39;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;While the following query succeeds:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;SELECT ... FROM ... WHERE query=&#39;python;mode=any;sort=relevance;limit=200;&#39;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;The error message is this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;span&gt;ERROR 1430 (HY000): There was a problem processing the query on the foreign data source. Data source error: searchd error: invalid or truncated request&lt;/span&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;I see this as a serious bug in the SphinxSE: it renders it useless; searching without the ability to filter is not something I can live with.&lt;!--more--&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;span&gt;The motivation&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;Sphinx does not store the actual text content. To get search results with snippets, you need to:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span&gt;Ask sphinx for the documents ids&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Get the content for those documents&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Ask sphinx for snippets based on the provided content and search phrase.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With the introduction of the &lt;strong&gt;sphinx_snippets()&lt;/strong&gt; function, this can all be done with a single query, like this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;SELECT my_docs.my_docs_id,  my_docs.publish_time,  CONVERT(sphinx_snippets(my_docs.id.content, &#39;my_docs_index&#39;, &#39;python&#39;) USING utf8) AS snippet  FROM tets.my_docs INNER JOIN test.my_docs_sphinx USING(my_docs_id) WHERE query=&#39;python;mode=any;sort=relevance;limit=200;range=publish_time_unix,1249506000,1252184400;&#39;;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span&gt;This is really a life saver; without this function, you need to get the resutls back to your application, then send the data again to MySQL, in which case you might altogether discard the SphinxSE and talk to sphinx directly. But with a single query you get to ask the results just as if you were asking for any result set from your database (with extra syntax).&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;&lt;span&gt;The workaround&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;span&gt;My setup is Percona&#39;s &lt;/span&gt;&lt;strong&gt;mysql-5.1.34-xtradb5&lt;/strong&gt; source, on Ubuntu server &lt;strong&gt;8.04 amd64&lt;/strong&gt;. The trick is to first compile MySQL with sphinx &lt;strong&gt;0.9.9-RC2&lt;/strong&gt;, in order to produce the &lt;strong&gt;sphinx.so&lt;/strong&gt; file (where the &lt;strong&gt;sphinx_snippets()&lt;/strong&gt; function is found), backup the &lt;strong&gt;sphinx.so&lt;/strong&gt; file, then recompile everything with &lt;strong&gt;sphinx 0.9.9-RC1&lt;/strong&gt;. The steps being:&lt;/p&gt;
&lt;p&gt;Compile MySQL with sphinx &lt;strong&gt;0.9.9-Rc2&lt;/strong&gt; (I choose to install MySQL on &lt;strong&gt;/usr/local/mysql51&lt;/strong&gt;):&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;tar xzfv mysql-5.1.34-xtradb5.tar.gz
cd mysql-5.1.34-xtradb5
cp -R /tmp/resources/sphinx-0.9.9-rc2/mysqlse storage/sphinx
sh BUILD/autorun.sh
./configure --with-plugins=innobase,sphinx --prefix=/usr/local/mysql51
make&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;This produces the &lt;strong&gt;sphinx.so&lt;/strong&gt;, &lt;strong&gt;sphinx.so.0&lt;/strong&gt;, &lt;strong&gt;sphinx.so.0.0.0&lt;/strong&gt; files. Back them up!&lt;/p&gt;
&lt;p&gt;Next, recompile with sphinx &lt;strong&gt;0.9.9-RC1&lt;/strong&gt;. I&#39;ve found that simple copying and recompiling doesn&#39;t work well. So just cleanup everything and start afresh:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;cd ..
rm -rf mysql-5.1.34-xtradb5
tar xzfv mysql-5.1.34-xtradb5.tar.gz
cd mysql-5.1.34-xtradb5
cp -R /tmp/resources/sphinx-0.9.9-rc1/mysqlse storage/sphinx
sh BUILD/autorun.sh
./configure --with-plugins=innobase,sphinx --prefix=/usr/local/mysql51
make
sudo make install&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Copy the &lt;strong&gt;sphinx.so&lt;/strong&gt; files into the MySQL plugin directory (&lt;strong&gt;/usr/local/mysql51/lib/mysql/plugin&lt;/strong&gt; in our case).&lt;/p&gt;
&lt;p&gt;Then build sphinx (you must have MySQL includes for sphinx to compile, so this must be the second step):&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;cd /tmp/resources/sphinx-0.9.9-rc1/
./configure --prefix=/usr/local/sphinx --with-mysql=/usr/local/mysql51
make
sudo make install&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Essentially, we&#39;re working now with &lt;strong&gt;0.9.9-RC1&lt;/strong&gt;, but the &lt;strong&gt;sphinx_snippets()&lt;/strong&gt; function is from the &lt;strong&gt;0.9.9-RC2&lt;/strong&gt; version, and happily no one bothers about this mix.&lt;/p&gt;
&lt;p&gt;I hope this helps.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>