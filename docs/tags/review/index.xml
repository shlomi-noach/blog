<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Review on code.openark.org</title>
    <link>/blog/tags/review/</link>
    <description>Recent content in Review on code.openark.org</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Tue, 18 Dec 2012 13:21:12 +0000</lastBuildDate>
    <atom:link href="/blog/tags/review/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>State of InnDB Online DDL in MySQL 5.6.9-RC (good news included)</title>
      <link>/blog/2012/12/18/state-of-inndb-online-ddl-in-mysql-5-6-9-rc-good-news-included/</link>
      <pubDate>Tue, 18 Dec 2012 13:21:12 +0000</pubDate>
      
      <guid>/blog/2012/12/18/state-of-inndb-online-ddl-in-mysql-5-6-9-rc-good-news-included/</guid>
      <description>&lt;p&gt;&lt;strong&gt;5.6.9-RC&lt;/strong&gt; is &lt;a href=&#34;https://blogs.oracle.com/MySQL/entry/mysql_5_6_9_release&#34;&gt;out&lt;/a&gt;, and I was curious to see how the &lt;a href=&#34;http://dev.mysql.com/doc/refman/5.6/en/innodb-online-ddl.html&#34;&gt;online DDL&lt;/a&gt; has improved since &lt;a href=&#34;http://code.openark.org/blog/mysql/state-of-inndb-online-ddl-in-mysql-5-6-8-rc&#34;&gt;my 5.6.8 review&lt;/a&gt;. I also owe James Day this review, since he came up with results inconsistent with my own.&lt;/p&gt;
&lt;p&gt;We both agreed the dataset I was using was too small, but I got similar results even on larger scale. Then some time passed, and &lt;strong&gt;5.6.9&lt;/strong&gt; was announced.&lt;/p&gt;
&lt;p&gt;So for the &lt;strong&gt;5.6.9&lt;/strong&gt; test I took one of my real tables on production. It is not extremely large: it&#39;s a ~ &lt;strong&gt;300MB&lt;/strong&gt; &lt;strong&gt;.ibd&lt;/strong&gt; file, in the following format:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;mysql&amp;gt; show create table tbl \G

CREATE TABLE `tbl` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `a` varchar(255) CHARACTER SET utf8 NOT NULL DEFAULT &#39;&#39;,
  `w` smallint(11) NOT NULL DEFAULT &#39;0&#39;,
  `d` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `icount` smallint(5) unsigned NOT NULL DEFAULT &#39;0&#39;,
  PRIMARY KEY (`id`) KEY_BLOCK_SIZE=8,
  UNIQUE KEY `u_idx` (`a`,`w`,`d`) KEY_BLOCK_SIZE=8,
  KEY `d` (`d`) KEY_BLOCK_SIZE=8
) ENGINE=InnoDB AUTO_INCREMENT=16960441 DEFAULT CHARSET=latin1 ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=16&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Got some &lt;strong&gt;2.5M&lt;/strong&gt; rows in the table; desktop machine, &lt;strong&gt;64&lt;/strong&gt; bit Linux, mysqlsandbox.&lt;/p&gt;
&lt;p&gt;I have crossed several DDL statements with several DML statements. The DDL statements in this test are (&lt;strong&gt;ALTER TABLE...&lt;/strong&gt;):&lt;!--more--&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ROW_FORMAT=COMPACT&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AUTO_INCREMENT=16960441&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ADD INDEX (w)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DROP INDEX w&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ADD COLUMN c CHAR(1) NOT NULL&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DROP COLUMN c&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The DML statements are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;select max(id) from test.tbl;&lt;/strong&gt; -- this queries the AUTO_INCREMENT value, which is of course a PRIMARY KEY&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;select min(d) from test.tbl;&lt;/strong&gt; -- there is an index on d, and normal execution plan is to optimize table away and just use the index&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;select min(icount) from test.tbl;&lt;/strong&gt; -- there is no index on icount, and full table scan is required&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;update test.tbl set d = d + interval 1 second where id = 8057370;&lt;/strong&gt; -- the UPDATE uses the PRIMARY KEY&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;update test.tbl set d = d + interval 1 second where icount = 200;&lt;/strong&gt; -- will affect &lt;strong&gt;4&lt;/strong&gt; rows, but requires full scan.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The results?&lt;/p&gt;
&lt;table border=&#34;0&#34; cellspacing=&#34;0&#34;&gt;
&lt;colgroup width=&#34;243&#34;&gt;&lt;/colgroup&gt;
&lt;colgroup width=&#34;92&#34;&gt;&lt;/colgroup&gt;
&lt;colgroup width=&#34;131&#34;&gt;&lt;/colgroup&gt;
&lt;colgroup span=&#34;5&#34; width=&#34;85&#34;&gt;&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#E6E6FF&#34; height=&#34;47&#34;&gt;&lt;strong&gt;ALTER TABLE...&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#E6E6FF&#34;&gt;&lt;strong&gt;Time (sec)&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#E6E6FF&#34;&gt;&lt;strong&gt;General comments&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#E6E6FF&#34;&gt;&lt;strong&gt;select max PK&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#E6E6FF&#34;&gt;&lt;strong&gt;select min by index&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#E6E6FF&#34;&gt;&lt;strong&gt;select min by full scan&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#E6E6FF&#34;&gt;&lt;strong&gt;update by PK&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#E6E6FF&#34;&gt;&lt;strong&gt;update by full scan&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34; height=&#34;17&#34;&gt;ROW_FORMAT=COMPACT&lt;/td&gt;
&lt;td align=&#34;RIGHT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;183&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34; height=&#34;16&#34;&gt;AUTO_INCREMENT=16960441&lt;/td&gt;
&lt;td align=&#34;RIGHT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;0.24&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;[Instant operation]&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;n/a&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;n/a&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;n/a&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;n/a&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;n/a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34; height=&#34;17&#34;&gt;ADD INDEX (w)&lt;/td&gt;
&lt;td align=&#34;RIGHT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34; height=&#34;16&#34;&gt;DROP INDEX w&lt;/td&gt;
&lt;td align=&#34;RIGHT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;0.1&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;[Instant operation]&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;n/a&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;n/a&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;n/a&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;n/a&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;n/a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34; height=&#34;17&#34;&gt;ADD COLUMN c CHAR(1) NOT NULL&lt;/td&gt;
&lt;td align=&#34;RIGHT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;103&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34; height=&#34;17&#34;&gt;DROP COLUMN c&lt;/td&gt;
&lt;td align=&#34;RIGHT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;110&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;td align=&#34;LEFT&#34; bgcolor=&#34;#FFFFCC&#34;&gt;&lt;span style=&#34;color: #00ae00;&#34;&gt;online&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;All operations were online: operations did not wait for &lt;strong&gt;ALTER&lt;/strong&gt; to complete.&lt;/li&gt;
&lt;li&gt;I executed all operations multiple times during each &lt;strong&gt;ALTER&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;In addition, I executed operations from another client.&lt;/li&gt;
&lt;li&gt;Some operations were fast, others sometimes took as long as &lt;strong&gt;7.34&lt;/strong&gt; seconds to complete. This is no small matter: the time it took for each DML was indeterministic, and longer than what it would usually take it. That&#39;s perfectly understandable. Just note that some operations took exceedingly long time to complete. My understanding is that the &lt;strong&gt;ALTER&lt;/strong&gt; operations happens in chunks. DML statements are allowed in between these chunks. This is the reason why on smaller tables there didn&#39;t seem to be any &#34;online&#34; statement: the chunks were just too large in relation to table size. And so, and this is still my own understanding, your query may get lucky or unlucky depending on the exact moment it has been issued.&lt;/li&gt;
&lt;li&gt;I did not try it with &lt;strong&gt;FOREIGN KEY&lt;/strong&gt;s. I previously concluded that foreign keys were a no-go for online DDL. I&#39;m not sure if this is still the case. Another time for this test - but it must take place.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Conclusions&lt;/h4&gt;
&lt;p&gt;Still RC - but for the first time the online DDL seem to deliver what&#39;s promised. I&#39;m very happy to see this.&lt;/p&gt;
&lt;p&gt;I am yet to understand how the &lt;strong&gt;ALTER&lt;/strong&gt; works via replication. With single threaded replication I would assume it&#39;s back to &#34;wait till I&#39;m done&#34; on the slave, in which case the &lt;em&gt;&#34;online&#34;&lt;/em&gt; term is not there yet. Even on multi-threaded replication DML on same schema would hang. I&#39;m happy to be corrected on this by an authority.&lt;/p&gt;
&lt;p&gt;My predicament is that &lt;a href=&#34;http://openarkkit.googlecode.com/svn/trunk/openarkkit/doc/html/oak-online-alter-table.html&#34;&gt;oak-online-alter-table&lt;/a&gt; or &lt;a href=&#34;http://www.percona.com/doc/percona-toolkit/2.1/pt-online-schema-change.html&#34;&gt;pt-online-schema-change&lt;/a&gt; are here to stay for the next couple of years at least. Some operations, like partitioning, are not supported by current online InnoDB DDL. Also, these scripts allow you some control over the speed at which the &lt;strong&gt;ALTER&lt;/strong&gt; process works, allowing for pre-defined sleep time in between chunks, so as to let the server - and its slaves - recover their breath.&lt;/p&gt;
&lt;p&gt;Nonetheless, big kudos for the InnoDB team at Oracle for pulling this one out!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>State of InnDB Online DDL in MySQL 5.6.8-RC</title>
      <link>/blog/2012/11/20/state-of-inndb-online-ddl-in-mysql-5-6-8-rc/</link>
      <pubDate>Tue, 20 Nov 2012 11:49:14 +0000</pubDate>
      
      <guid>/blog/2012/11/20/state-of-inndb-online-ddl-in-mysql-5-6-8-rc/</guid>
      <description>&lt;p&gt;&lt;strong&gt;5.6.8-rc&lt;/strong&gt; is out, and so I&#39;m following up on InnoDB&#39;s online DDL new feature: the ability to SELECT, INSERT, DELETE, UPDATE a table even while an ALTER TABLE is executing on same table.&lt;/p&gt;
&lt;h4&gt;The brief summary&lt;/h4&gt;
&lt;p&gt;Not as advertised; many things can&#39;t be done.&lt;/p&gt;
&lt;h4&gt;The longer review&lt;/h4&gt;
&lt;p&gt;I&#39;m using &lt;strong&gt;5.6.8-rc 64bit&lt;/strong&gt; binary distribution for Linux, installed via &lt;a href=&#34;http://mysqlsandbox.net/&#34;&gt;mysqlsandbox&lt;/a&gt;. My hardware is irrelevant, but the fact I&#39;m testing on my laptop assists me in that &lt;strong&gt;ALTER TABLE&lt;/strong&gt; operations take a while, so that I&#39;m able to easily type commands in two terminals and have the time to watch them being executed. Query cache is disabled.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;I&#39;m using the sakila sample database, and in particular I&#39;m working with the rental table. Here&#39;s the table definition:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;CREATE TABLE `rental` (
  `rental_id` int(11) NOT NULL AUTO_INCREMENT,
  `rental_date` datetime NOT NULL,
  `inventory_id` mediumint(8) unsigned NOT NULL,
  `customer_id` smallint(5) unsigned NOT NULL,
  `return_date` datetime DEFAULT NULL,
  `staff_id` tinyint(3) unsigned NOT NULL,
  `last_update` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`rental_id`),
  UNIQUE KEY `rental_date` (`rental_date`,`inventory_id`,`customer_id`),
  KEY `idx_fk_inventory_id` (`inventory_id`),
  KEY `idx_fk_customer_id` (`customer_id`),
  KEY `idx_fk_staff_id` (`staff_id`),
  CONSTRAINT `fk_rental_staff` FOREIGN KEY (`staff_id`) REFERENCES `staff` (`staff_id`) ON UPDATE CASCADE,
  CONSTRAINT `fk_rental_inventory` FOREIGN KEY (`inventory_id`) REFERENCES `inventory` (`inventory_id`) ON UPDATE CASCADE,
  CONSTRAINT `fk_rental_customer` FOREIGN KEY (`customer_id`) REFERENCES `customer` (`customer_id`) ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=16050 DEFAULT CHARSET=utf8&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Highlights for the table: &lt;strong&gt;AUTO_INCREMENT PRIMARY KEY&lt;/strong&gt;, some columns indexed, some not, and Foreign Keys in place. Pretty much a standard table. It contains &lt;strong&gt;16,044&lt;/strong&gt; rows. Row format is &lt;strong&gt;COMPACT&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;What I want to know is: which DDL commands allow for which online DML commands?&lt;/p&gt;
&lt;p&gt;So, on terminal #1 I will issue queries like:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;node1 5.6.8-rc-log sakila&amp;gt; alter table &lt;strong&gt;sakila.rental&lt;/strong&gt; ROW_FORMAT=COMPACT &lt;strong&gt;/* or whatever */&lt;/strong&gt;;
Query OK, 0 rows affected (10.57 sec)
Records: 0  Duplicates: 0  Warnings: 0&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;And during the above operation, I will execute the following on terminal #2:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;select max(rental_id) from sakila.rental;&lt;/strong&gt; this queries the AUTO_INCREMENT value, which is of course a PRIMARY KEY&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;select min(rental_date) from sakila.rental&lt;/strong&gt;; there is an index on rental_date, and normal execution plan is to optimize table away and just use the index&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;select min(return_date) from sakila.rental&lt;/strong&gt;; there is no index on return_date, and full table scan is required&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;update rental set return_date = return_date + interval 1 second where rental_id=3&lt;/strong&gt;; the UPDATE uses the PRIMARY KEY&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;update rental set return_date = return_date + interval 1 second where return_date = NOW()&lt;/strong&gt;; won&#39;t actually affect anything, but requires full scan.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So here are the results:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;+-------------------------------------------------------------+-------+---------------------------+---------------+---------------------+-------------------------+--------------+---------------------+
| ALTER statement                                             | Time  | General comments          | select max PK | select min by index | select min by full scan | update by PK | update by full scan |
+-------------------------------------------------------------+-------+---------------------------+---------------+---------------------+-------------------------+--------------+---------------------+
| ROW_FORMAT=COMPACT                                          | 10.92 |                           | &lt;span style=&#34;color: #008000;&#34;&gt;Instant&lt;/span&gt;       | &lt;span style=&#34;color: #008000;&#34;&gt;Instant&lt;/span&gt;             | &lt;span style=&#34;color: #008000;&#34;&gt;Instant&lt;/span&gt;                 | &lt;span style=&#34;color: #800000;&#34;&gt;blocked&lt;/span&gt;      | &lt;span style=&#34;color: #800000;&#34;&gt;blocked&lt;/span&gt;             |
| AUTO_INCREMENT=16051                                        |  0.06 | Instant, no table rebuild | N/A           | N/A                 | N/A                     | N/A          | N/A                 |
| ADD INDEX(last_update)                                      |  2.37 |                           | &lt;span style=&#34;color: #800000;&#34;&gt;blocked&lt;/span&gt;       | &lt;span style=&#34;color: #800000;&#34;&gt;blocked&lt;/span&gt;             | &lt;span style=&#34;color: #800000;&#34;&gt;blocked&lt;/span&gt;                 | &lt;span style=&#34;color: #800000;&#34;&gt;blocked&lt;/span&gt;      | &lt;span style=&#34;color: #800000;&#34;&gt;blocked&lt;/span&gt;             |
| ADD INDEX(last_update), ALGORITHM=INPLACE                   |  1.83 |                           | &lt;span style=&#34;color: #800000;&#34;&gt;blocked&lt;/span&gt;       | &lt;span style=&#34;color: #800000;&#34;&gt;blocked&lt;/span&gt;             | &lt;span style=&#34;color: #800000;&#34;&gt;blocked&lt;/span&gt;                 | &lt;span style=&#34;color: #800000;&#34;&gt;blocked&lt;/span&gt;      | &lt;span style=&#34;color: #800000;&#34;&gt;blocked&lt;/span&gt;             |
| ADD INDEX(last_update), ALGORITHM=INPLACE, LOCK=NONE        |  0.00 | ERROR 1235 (42000): ...   | N/A           | N/A                 | N/A                     | N/A          | N/A                 |
| ADD COLUMN c CHAR(1) NOT NULL                               | 11.20 |                           | &lt;span style=&#34;color: #008000;&#34;&gt;Instant&lt;/span&gt;       | &lt;span style=&#34;color: #008000;&#34;&gt;Instant&lt;/span&gt;             | &lt;span style=&#34;color: #008000;&#34;&gt;Instant&lt;/span&gt;                 | &lt;span style=&#34;color: #800000;&#34;&gt;blocked&lt;/span&gt;      | &lt;span style=&#34;color: #800000;&#34;&gt;blocked&lt;/span&gt;             |
| ADD COLUMN c CHAR(1) NOT NULL, ALGORITHM=INPLACE, LOCK=NONE |  0.00 | ERROR 1235 (42000): .     | N/A           | N/A                 | N/A                     | N/A          | N/A                 |
+-------------------------------------------------------------+-------+---------------------------+---------------+---------------------+-------------------------+--------------+---------------------+&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Rather surprising, I would say.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;None&lt;/em&gt; of my tests resolved with online write (&lt;strong&gt;UPDATE&lt;/strong&gt;). At best I could get online read (&lt;strong&gt;SEELCT&lt;/strong&gt;).&lt;br /&gt;
&lt;strong&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AUTO_INCREMENT&lt;/strong&gt; is instantaneous. High time for that! It&#39;s just some number in the &lt;strong&gt;.frm&lt;/strong&gt; file, never understood the need for table rebuild.&lt;/li&gt;
&lt;li&gt;Apparently &lt;strong&gt;ADD COLUMN&lt;/strong&gt; is &lt;em&gt;more online&lt;/em&gt; than &lt;strong&gt;ADD INDEX&lt;/strong&gt;, and I&#39;ve tested this again and again and again to make sure I was doing it right. This is quite weird, even according to the &lt;a href=&#34;http://dev.mysql.com/doc/refman/5.6/en/innodb-online-ddl.html&#34;&gt;docs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;In none of the above tests (and others, non listed), have I been able to specify &lt;strong&gt;LOCK=NONE&lt;/strong&gt;. It&#39;s always &lt;strong&gt;ERROR 1235 (42000): This version of MySQL doesn&#39;t yet support &#39;alter table sakila.rental &amp;lt;whatever&amp;gt;, algorithm=inplace, lock=none&#39;&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So what&#39;s so online about this? Online reads are nice, but most everyone cannot accept blocking writes (for same reason no one would use &lt;em&gt;mysqlhotcopy&lt;/em&gt;, also so wrongly named). This leaves us again with &lt;a href=&#34;http://openarkkit.googlecode.com/svn/trunk/openarkkit/doc/html/oak-online-alter-table.html&#34;&gt;oak-online-alter-table&lt;/a&gt; and &lt;a href=&#34;http://www.percona.com/doc/percona-toolkit/2.1/pt-online-schema-change.html&#34;&gt;pt-online-schema-change&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;The butler did it&lt;/h4&gt;
&lt;p&gt;Apologies to the butler, the &lt;strong&gt;FOREIGN KEY&lt;/strong&gt;s did it. Let&#39;s try the same again without foreign keys:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;node1 5.6.8-rc-log sakila&amp;gt; create table rental2 like rental;
node1 5.6.8-rc-log sakila&amp;gt; insert into rental2 select * from rental;
node1 5.6.8-rc-log sakila&amp;gt; rename table rental to rental_old, rental2 to rental;
Query OK, 0 rows affected (0.31 sec)&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here are the results:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;+-------------------------------------------------------------+-------+---------------------------+----------------+---------------------+-------------------------+----------------+---------------------+
| ALTER statement                                             | Time  | General comments          | select max PK  | select min by index | select min by full scan | update by PK   | update by full scan |
+-------------------------------------------------------------+-------+---------------------------+----------------+---------------------+-------------------------+----------------+---------------------+
| ROW_FORMAT=COMPACT                                          | 11.03 |                           | &lt;span style=&#34;color: #008000;&#34;&gt;Instant&lt;/span&gt;        | &lt;span style=&#34;color: #008000;&#34;&gt;Instant&lt;/span&gt;             | &lt;span style=&#34;color: #008000;&#34;&gt;Instant&lt;/span&gt;                 | &lt;span style=&#34;color: #008000;&#34;&gt;Instant&lt;/span&gt;        | &lt;span style=&#34;color: #008000;&#34;&gt;Instant&lt;/span&gt;             |
| AUTO_INCREMENT=16051                                        |  0.05 | Instant, no table rebuild | N/A            | N/A                 | N/A                     | N/A            | N/A                 |
| ADD INDEX(last_update)                                      |  2.04 |                           | * &lt;span style=&#34;color: #ff6600;&#34;&gt;Inconsistent&lt;/span&gt; | * &lt;span style=&#34;color: #ff6600;&#34;&gt;Inconsistent&lt;/span&gt;      | * &lt;span style=&#34;color: #ff6600;&#34;&gt;Inconsistent&lt;/span&gt;          | &lt;span style=&#34;color: #800000;&#34;&gt;blocked&lt;/span&gt;        | &lt;span style=&#34;color: #800000;&#34;&gt;blocked&lt;/span&gt;             |
| ADD INDEX(last_update), ALGORITHM=INPLACE, LOCK=NONE        |  3.14 |                           | * &lt;span style=&#34;color: #ff6600;&#34;&gt;Inconsistent&lt;/span&gt; | * &lt;span style=&#34;color: #ff6600;&#34;&gt;Inconsistent&lt;/span&gt;      | * &lt;span style=&#34;color: #ff6600;&#34;&gt;Inconsistent&lt;/span&gt;          | &lt;span style=&#34;color: #800000;&#34;&gt;blocked&lt;/span&gt;        | &lt;span style=&#34;color: #800000;&#34;&gt;blocked&lt;/span&gt;             |
| ADD COLUMN c CHAR(1) NOT NULL                               |    ** |                           | * &lt;span style=&#34;color: #ff6600;&#34;&gt;Inconsistent&lt;/span&gt; | * &lt;span style=&#34;color: #ff6600;&#34;&gt;Inconsistent&lt;/span&gt;      | * &lt;span style=&#34;color: #ff6600;&#34;&gt;Inconsistent&lt;/span&gt;          | * &lt;span style=&#34;color: #ff6600;&#34;&gt;Inconsistent&lt;/span&gt; | * &lt;span style=&#34;color: #ff6600;&#34;&gt;Inconsistent&lt;/span&gt;      |
| ADD COLUMN c CHAR(1) NOT NULL, ALGORITHM=INPLACE, LOCK=NONE |    ** |                           | * &lt;span style=&#34;color: #ff6600;&#34;&gt;Inconsistent&lt;/span&gt; | * &lt;span style=&#34;color: #ff6600;&#34;&gt;Inconsistent&lt;/span&gt;      | * &lt;span style=&#34;color: #ff6600;&#34;&gt;Inconsistent&lt;/span&gt;          | * &lt;span style=&#34;color: #ff6600;&#34;&gt;Inconsistent&lt;/span&gt; | * &lt;span style=&#34;color: #ff6600;&#34;&gt;Inconsistent&lt;/span&gt;      |
+-------------------------------------------------------------+-------+---------------------------+----------------+---------------------+-------------------------+----------------+---------------------+&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;What&#39;s going on here?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ALGORITHM=INPLACE, LOCK=NONE&lt;/strong&gt; is accepted! Bad, bad foreign keys!&lt;br /&gt;
&lt;strong&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;* ADD INDEX&lt;/strong&gt; usually allows for concurrent reads, but after repeated tests &lt;strong&gt;SELECT&lt;/strong&gt;s start to block. Then they don&#39;t work concurrently anymore until table is recreated. But even that not always, so I&#39;m not sure what the inconsistency is.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;* ADD COLUMN&lt;/strong&gt; is still more concurrent than &lt;strong&gt;ADD INDEX&lt;/strong&gt;, and actually allows for concurrent writes! Though, inconsistently. Sometimes it does not allow for concurrent writes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;** ADD COLUMN&lt;/strong&gt; runtime highly affected by concurrent queries. It wents as high as &lt;strong&gt;45&lt;/strong&gt; seconds on my laptop. Now, to make things clear, I&#39;m not running an automated benchmark here: I&#39;m copying+pasting the statements from my editor to the mysql CLI. So, maybe &lt;strong&gt;10&lt;/strong&gt; or &lt;strong&gt;15&lt;/strong&gt;&lt;strong&gt;SELECT&lt;/strong&gt; and &lt;strong&gt;UPDATE&lt;/strong&gt; queries executes. How does that justify &lt;strong&gt;35&lt;/strong&gt; seconds delay in table rebuild?&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Some conclusions:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The documentation does not specify anything about &lt;strong&gt;FOREIGN KEY&lt;/strong&gt;s crashing the party. It should.&lt;/li&gt;
&lt;li&gt;The documentation specifically mentions the &lt;strong&gt;ADD/DROP INDEX&lt;/strong&gt; statements to be online. &lt;strong&gt;ADD INDEX&lt;/strong&gt; is less online than &lt;strong&gt;ADD COLUMN&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Everything is still shaky. Sometimes things work, sometimes they don&#39;t.&lt;/li&gt;
&lt;li&gt;Runtimes are unproportionally affected by concurrent queries.&lt;/li&gt;
&lt;li&gt;For the meantime, I keep to my online alter table scripts. Been using them for &lt;strong&gt;3.5&lt;/strong&gt; years now.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>