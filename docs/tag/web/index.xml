<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on code.openark.org</title>
    <link>/blog/tag/web/</link>
    <description>Recent content in Web on code.openark.org</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Mon, 08 Nov 2010 12:45:45 +0000</lastBuildDate>
    <atom:link href="/blog/tag/web/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>mycheckpoint (rev 208): aggregation tables, enhanced charting, RPM distribution</title>
      <link>/blog/mysql/mycheckpoint-rev-208-aggregation-tables-enhanced-charting-rpm-distribution/</link>
      <pubDate>Mon, 08 Nov 2010 12:45:45 +0000</pubDate>
      
      <guid>/blog/mysql/mycheckpoint-rev-208-aggregation-tables-enhanced-charting-rpm-distribution/</guid>
      <description>&lt;p&gt;Revision &lt;strong&gt;208&lt;/strong&gt; of &lt;a href=&#34;../../forge/mycheckpoint&#34;&gt;mycheckpoint&lt;/a&gt;, a MySQL monitoring solution, has  been released. New and updated in this revision:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Aggregation tables&lt;/strong&gt;: aggregated data makes for fast reports on previously slow queries.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Enhanced charting&lt;/strong&gt;: interactive charts now present time stamps dynamically (see &lt;a href=&#34;http://mycheckpoint.googlecode.com/svn/trunk/doc/html/sample/http/mcp_sql00/sv_report_html_brief&#34;&gt;&lt;strong&gt;demo&lt;/strong&gt;&lt;/a&gt;); &#34;Zoom in&#34; charts are available (see &lt;a href=&#34;http://mycheckpoint.googlecode.com/svn/trunk/doc/html/sample/http/mcp_sql00/zoom/questions&#34;&gt;&lt;strong&gt;demo&lt;/strong&gt;&lt;/a&gt;) on &lt;em&gt;mycheckpoint&lt;/em&gt;&#39;s HTTP server.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RPM distribution&lt;/strong&gt;: a &#34;noarch&#34; RPM &lt;em&gt;mycheckpoint&lt;/em&gt; build is now available.&lt;/li&gt;
&lt;li&gt;Initial work on formalizing test environment&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;mycheckpoint&lt;/em&gt; celebrates one year of existence!&lt;/p&gt;
&lt;h4&gt;Aggregation tables&lt;/h4&gt;
&lt;p&gt;I really wanted to avoid using these: everything was so more beautiful with one single dataset and dozens of supporting views (OK, the views themselves are hardly &#34;beautiful&#34;).&lt;/p&gt;
&lt;p&gt;However it was impossible (for my level of expertise) to optimize query performance what with all those views on per-hour and per-day aggregation. The GROUP BYs and the JOINs did not make it possible for condition pushdown (i.e. using MERGE algorithm) where desired.&lt;/p&gt;
&lt;p&gt;As result, mycheckpoint now manages aggregation tables: per-hour and per-day. The impact on sample taking is neglect able (making for two additional fast queries), but the impact on reading aggregated data is overwhelming. Generating a HTML full report could take a few minutes to complete. It now returns in no time. This makes charting more attractive, and allows for enhanced charting, such as zooming in on charts, as described following.&lt;/p&gt;
&lt;p&gt;Aggregation tables will automatically be created and retroactively populated upon using revision 208. There&#39;s nothing special to do; be advised that for one single execution of &lt;em&gt;mycheckpoint&lt;/em&gt;, many INSERT queries are going to be executed. Shouldn&#39;t take more than a couple minutes on commodity hardware and a few months of history.&lt;/p&gt;
&lt;p&gt;It is possible to disable aggregation tables, or make for a complete rebuild of tables; by default, though, aggregation is ON.&lt;/p&gt;
&lt;h4&gt;Enhanced charting&lt;/h4&gt;
&lt;p&gt;Two enhancements here:&lt;!--more--&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The interactive line charts already know how to update legend data as mouse hovers over them. Now they also present accurate date &amp;amp; time. This provides with fully informative charts.&lt;/li&gt;
&lt;li&gt;As with other monitoring tools, it is possible to &#34;zoom in&#34; on a chart: zooming in will present any chart in &#34;last 24 hours&#34;, &#34;last 10 days&#34; and &#34;complete history&#34; views, magnified on screen. See &lt;a href=&#34;http://mycheckpoint.googlecode.com/svn/trunk/doc/html/sample/http/mcp_sql00/zoom/questions&#34;&gt;&lt;strong&gt;demo&lt;/strong&gt;&lt;/a&gt; here.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;RPM distribution&lt;/h4&gt;
&lt;p&gt;No excuse for this being so late, I know. But RPM distribution is now &lt;a href=&#34;http://code.google.com/p/mycheckpoint/&#34;&gt;available&lt;/a&gt;. Yeepee!&lt;/p&gt;
&lt;p&gt;This is a &lt;em&gt;noarch&lt;/em&gt; distribution, courtesy of Python&#39;s &lt;a href=&#34;http://docs.python.org/distutils/&#34;&gt;distutils&lt;/a&gt;; you should be able to install the package on any RPM supporting platform. I have only tested in on CentOS; feedback is welcome.&lt;/p&gt;
&lt;h4&gt;Future plans&lt;/h4&gt;
&lt;p&gt;Work is going on. These are the non-scheduled future tasks I see:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Monitoring InnoDB Plugin &amp;amp; XtraDB status.&lt;/li&gt;
&lt;li&gt;A proper &lt;em&gt;man&lt;/em&gt; page.&lt;/li&gt;
&lt;li&gt;Anything else that interests me &amp;amp; the users.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Try it out&lt;/h4&gt;
&lt;p&gt;Try out &lt;em&gt;mycheckpoint&lt;/em&gt;. It’s a different kind of monitoring    solution. Simple monitoring (charting) is immediate. For more  interesting results you will need basic SQL skills, and in return you’ll  get a lot   of power under your hands.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download mycheckpoint &lt;a href=&#34;https://code.google.com/p/mycheckpoint/&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visit the project’s &lt;a href=&#34;../../forge/mycheckpoint&#34;&gt;homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Browse the &lt;a href=&#34;../../forge/mycheckpoint/documentation&#34;&gt;documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Report &lt;a href=&#34;https://code.google.com/p/mycheckpoint/issues/list&#34;&gt;bugs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;mycheckpoint&lt;/em&gt; is released under the &lt;a href=&#34;http://www.opensource.org/licenses/bsd-license.php&#34;&gt;New BSD  License&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Umm, I&#39;ll repeat this last one: &lt;em&gt;mycheckpoint&lt;/em&gt; is released under the &lt;a href=&#34;http://www.opensource.org/licenses/bsd-license.php&#34;&gt;New BSD  License&lt;/a&gt;. Still, and will continue to be. Thanks for the &lt;a href=&#34;http://code.openark.org/blog/mysql/openark-kit-facebook-online-schema-change-and-thoughts-on-open-source-licenses#comments&#34;&gt;good advice&lt;/a&gt; by Lenz, Domas and others.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mycheckpoint (rev. 190): HTTP server; interactive charts</title>
      <link>/blog/mysql/mycheckpoint-rev-190-http-server-interactive-charts/</link>
      <pubDate>Tue, 07 Sep 2010 07:53:01 +0000</pubDate>
      
      <guid>/blog/mysql/mycheckpoint-rev-190-http-server-interactive-charts/</guid>
      <description>&lt;p&gt;Revision &lt;strong&gt;190&lt;/strong&gt; of &lt;a href=&#34;../../forge/mycheckpoint&#34;&gt;mycheckpoint&lt;/a&gt;, a MySQL monitoring solution, has  been released. New and updated in this revision:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HTTP server&lt;/strong&gt;: &lt;em&gt;mycheckpoint&lt;/em&gt; can now act as a web server. Point your browser and start browsing through HTML reports. See mock up &lt;a href=&#34;http://code.openark.org/forge/wp-content/uploads/2010/09/r190/mcp_sql00/sv_report_html_brief.html&#34;&gt;&lt;strong&gt;demo&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Interactive charts&lt;/strong&gt;: HTML line charts are now interactive, presenting with accurate data as you move over them. See &lt;a href=&#34;http://code.openark.org/forge/wp-content/uploads/2010/09/r190/mcp_sql00_samples/sv_report_html_brief.html&#34;&gt;&lt;strong&gt;sample&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Enhanced auto-deploy&lt;/strong&gt;: now auto-recognizing failed upgrades.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reduced footprint&lt;/strong&gt;: much code taken out of the views, leading to faster loading times.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Better configuration file use&lt;/strong&gt;: now supporting all command line options in config file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Remote host monitoring accessibility&lt;/strong&gt;: now supporting complete configurable accessibility details.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bug fixes&lt;/strong&gt;: thanks to the bug reporters!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;mycheckpoint&lt;/em&gt; is free, simple, easy to use (now easier with HTTP server) and &lt;strong&gt;useful&lt;/strong&gt;. I encourage you to try it out: even compared with other existing and emerging monitoring tools, I believe you will find it a breeze; it&#39;s low impact and lightness appealing; it&#39;s alerts mechanism assuring; its geeky SQL-based nature with ability to drill down to fine details -- geeky-kind-of-attractive.&lt;/p&gt;
&lt;p&gt;&amp;lt;/encouragement&amp;gt;&lt;/p&gt;
&lt;h4&gt;HTTP server&lt;/h4&gt;
&lt;p&gt;You can now run &lt;em&gt;mycheckpoint&lt;/em&gt; in &lt;em&gt;http&lt;/em&gt; mode:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;bash$ &lt;strong&gt;mycheckpoint http&lt;/strong&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;mycheckpoint&lt;/em&gt; will listen on port &lt;strong&gt;12306&lt;/strong&gt;, and will present you with easy browsing through the reports of your &lt;em&gt;mycheckpoint&lt;/em&gt; databases.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;http&lt;/em&gt; server automatically detects those schemata used by mycheckpoint, and utilizes the existing HTML views, integrating them into the greater web framework.&lt;/p&gt;
&lt;p&gt;While in &lt;em&gt;http&lt;/em&gt; mode, mycheckpoint does nothing besides serving web pages. It does not actively exercise monitoring: you must still use the usual cron jobs or other scheduled tasks by which you invoke &lt;em&gt;mycheckpoint&lt;/em&gt; for monitoring.&lt;/p&gt;
&lt;p&gt;The http server is directed at a single MySQL server, as with the following example:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;bash$ &lt;strong&gt;mycheckpoint --host=slave1.localdomain --port=3306 --http-port=12306 http&lt;/strong&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is assumed that this server has the monitoring schemata.&lt;/p&gt;
&lt;p&gt;See mock up &lt;a href=&#34;http://code.openark.org/forge/wp-content/uploads/2010/09/r190/mcp_sql00/sv_report_html_brief.html&#34;&gt;&lt;strong&gt;demo&lt;/strong&gt;&lt;/a&gt;. The demo uses presents with real output from a mycheckpoint HTTP server; I haven&#39;t got the means to put up a live demo.&lt;/p&gt;
&lt;h4&gt;Interactive charts&lt;/h4&gt;
&lt;p&gt;The &lt;em&gt;openark line charts&lt;/em&gt;, used in the HTML reports, are now interactive. As you scroll over, the legend presents you with series values.&lt;/p&gt;
&lt;p&gt;No more &lt;em&gt;&#34;I have this huge spike once every 4 hours, which reduces all other values to something that looks like zero but is actually NOT&#34;&lt;/em&gt;. Hover, and see the real values.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&#34;http://code.openark.org/forge/wp-content/uploads/2010/09/r190/mcp_sql00_samples/sv_report_html_brief.html&#34;&gt;&lt;strong&gt;sample&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Enhanced auto-deploy&lt;/h4&gt;
&lt;p&gt;The idea with mycheckpoint is that it should know how to self upgrade the schema on version upgrade (much like automatic WordPress upgrades). mycheckpoint does bookkeeping of installed versions within the database, and upgrades by simple comparison.&lt;/p&gt;
&lt;p&gt;It now, following a couple of reported bugs, also recognizes failure of partial, failed upgrades. This adds to the automation of &lt;em&gt;mycheckpoint&lt;/em&gt;&#39;s installation.&lt;/p&gt;
&lt;h4&gt;Reduced footprint&lt;/h4&gt;
&lt;p&gt;Some of &lt;em&gt;mycheckpoint&lt;/em&gt;&#39;s views are complicated, and lead to a large amount of code in view declaration. This leads to increased table definition size (large &lt;strong&gt;.frm&lt;/strong&gt; files). There has been some work to reduce this size where possible. Work is still ongoing, but some 30% has been taken off already. This leads to faster table (view) load time.&lt;/p&gt;
&lt;h4&gt;Better configuration file use&lt;/h4&gt;
&lt;p&gt;Any argument supported on the command line is now also supported in the config style. Much like is handled with MySQL. For example, one can issue:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;mycheckpoint --monitored-host=sql02.mydb.com  --monitored-user=monitor --monitored-password=123456&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;But now also:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;mycheckpoint&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;With the following in &lt;strong&gt;/etc/mycheckpoint.cnf&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;[mycheckpoint]
monitored_host     = sql02.mydb.com
monitored_user     = monitor
monitored_password = 123456
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Rules are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If an option is specified on command line, it takes precedence over anything else.&lt;/li&gt;
&lt;li&gt;Otherwise, if it&#39;s specified in the configuration file, value is read from file.&lt;/li&gt;
&lt;li&gt;Otherwise use default value is used.&lt;/li&gt;
&lt;li&gt;On command line, option format is&lt;strong&gt; xxx-yyy-zzz&lt;/strong&gt;: words split with dash/minus character.&lt;/li&gt;
&lt;li&gt;On configuration file, option format is &lt;strong&gt;xxx_yyy_zzz&lt;/strong&gt;: words split with underscore. Unlike MySQL configuration format, dashes cannot be used.&lt;/li&gt;
&lt;li&gt;If an option is specified multiple times on configuration file -- well -- I have the answer, but I won&#39;t tell. Just don&#39;t do it. It&#39;s bad for your health.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Future plans&lt;/h4&gt;
&lt;p&gt;Work is going on. These are the non-scheduled future tasks I see:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Monitoring InnoDB Plugin &amp;amp; XtraDB status.&lt;/li&gt;
&lt;li&gt;A proper &lt;em&gt;man&lt;/em&gt; page.&lt;/li&gt;
&lt;li&gt;Anything else that interests me &amp;amp; the users.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Try it out&lt;/h4&gt;
&lt;p&gt;Try out &lt;em&gt;mycheckpoint&lt;/em&gt;. It’s a different kind of monitoring   solution. Simple monitoring (charting) is immediate. For more interesting results you will need basic SQL skills, and in return you’ll get a lot   of power under your hands.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download mycheckpoint &lt;a href=&#34;https://code.google.com/p/mycheckpoint/&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Visit the project’s &lt;a href=&#34;../../forge/mycheckpoint&#34;&gt;homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Browse the &lt;a href=&#34;../../forge/mycheckpoint/documentation&#34;&gt;documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Report &lt;a href=&#34;https://code.google.com/p/mycheckpoint/issues/list&#34;&gt;bugs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;mycheckpoint&lt;/em&gt; is released under the &lt;a href=&#34;http://www.opensource.org/licenses/bsd-license.php&#34;&gt;New BSD  License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Static charts vs. interactive charts</title>
      <link>/blog/mysql/static-charts-vs-interactive-charts/</link>
      <pubDate>Tue, 02 Mar 2010 15:28:08 +0000</pubDate>
      
      <guid>/blog/mysql/static-charts-vs-interactive-charts/</guid>
      <description>&lt;p&gt;I&#39;m having my usual fun with charts. Working on &lt;a href=&#34;http://code.openark.org/forge/mycheckpoint&#34;&gt;mycheckpoint&lt;/a&gt;, I&#39;ve generated monitoring charts using the &lt;a href=&#34;http://code.google.com/apis/chart/image_charts.html&#34;&gt;Google Chars API&lt;/a&gt;. But I&#39;ve also had chance to experiment and deploy interactive charts, JavaScript based. In particular, I used and tweaked &lt;a href=&#34;http://www.danvk.org/dygraphs/&#34;&gt;dygraphs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I&#39;d like to note some differences in using charts of both kinds. And I think it makes a very big difference.&lt;/p&gt;
&lt;h4&gt;Static charts&lt;/h4&gt;
&lt;p&gt;I&#39;ll call any image-based chart by &#34;static chart&#34;. It&#39;s just a static image. Example of such charts are those generated by Google Image Charts (they now also have new, interactive charts), or &lt;a href=&#34;http://oss.oetiker.ch/rrdtool/index.en.html&#34;&gt;RRDtool&lt;/a&gt;. Show below is an example of a static chart; in this example, generated by Google:&lt;!--more--&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre /&gt;&lt;img class=&#34;alignnone&#34; src=&#34;/blog/blog/assets/chart?cht=lc&amp;amp;chs=400x200&amp;amp;chts=808080,12&amp;amp;chtt=Dec+4,+15:00++-++Dec+5,+15:00&amp;amp;chf=c,s,ffffff&amp;amp;chdl=com_select_psec|com_insert_psec|com_delete_psec|com_update_psec|com_replace_psec&amp;amp;chdlp=b&amp;amp;chco=ff8c00,4682b4,9acd32,dc143c,9932cc&amp;amp;chd=s:zpvxszxsxur11p1xt10wyxzuyv6xw4yx3x041x2zz6zvz7y91x23z4niqkkmojllkhknhlgnmimohilkkqgkkmnmhlljinjmnhmo________________imlnpmkukopmnpjsojnrrlrqnpprs,iZagVcgWXaZdjVbgSbhYdXZXZcbcXZbcadabccabbZaaZeabdYbbZXceWUXaXYXSXVXaSSZUUXWYUUXbTYUUVabWWVZZVYaWZZYa________________ZYbVcXWdYWZcXaYaYWXYfZcdaVZaZ,MNNNNNONLKOMPNNMNNOPMNNLMQNOMMMNMNNNNRONNOPMNQMPONPOLMTNKJKMKKJILKILJJJLIIKUMHJJIIHHHKJIIHIIIHJHIIJM________________NOMLMMLOPOPKLKKNPKMMNMOPQNNOL,NIIMHKOIHKIKOHKMGKNJKIJIKMKLJJMKIKJKLLJLLJLLKMLJLJKKKIIVIIJLJKJHJIKLIHMIIKIKIIKLHKIIJLKIJJKKIJKIKKJK________________IIKILJJLKIKKHJJJJIJJMIKLKGJKK,AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA________________AAAAAAAAAAAAAAAAAAAAAAAAAAAAA&amp;amp;chxt=x,y&amp;amp;chxr=1,0,136.620000&amp;amp;chxl=0:||16:00||+||20:00||+||00:00||+||04:00||+||08:00||+||12:00||+||&amp;amp;chxs=0,505050,10,0,lt&amp;amp;chg=4.17,25,1,2,0.00,0&amp;amp;chxp=0,0.00,4.17,8.34,12.51,16.68,20.85,25.02,29.19,33.36,37.53,41.70,45.87,50.04,54.21,58.38,62.55,66.72,70.89,75.06,79.23,83.40,87.57,91.74,95.91,100.08&#34; alt=&#34;&#34; width=&#34;400&#34; height=&#34;200&#34; /&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Pros and cons of static charts&lt;/h4&gt;
Pros
&lt;ul&gt;
	&lt;li&gt;Images can be viewed on any graphical platform. Browsers, email clients, cell phones, whatever.&lt;/li&gt;
	&lt;li&gt;Self contained: chart image, legend, scales: all in one image.&lt;/li&gt;
	&lt;li&gt;As such, easy to move around.&lt;/li&gt;
	&lt;li&gt;Are safe to use.&lt;/li&gt;
&lt;/ul&gt;
Cons
&lt;ul&gt;
	&lt;li&gt;Images are fuzzy. Is the &lt;strong&gt;com_replace_psec&lt;/strong&gt; really 0? Maybe it&#39;s 0.1? A larger value can make lower values hard to tell.&lt;/li&gt;
	&lt;li&gt;Images are inaccurate: the colors can lie. The red and green lines showing are hard to tell apart. The red is painted above the green. Data gets &#34;lost&#34;.&lt;/li&gt;
	&lt;li&gt;They do not zoom (one needs to regenerate larger image)&lt;/li&gt;
	&lt;li&gt;Unless encoded with base64, HTML pages which include images need to link outside.&lt;/li&gt;
	&lt;li&gt;In the particular case of Google Charts, one is limited to 2K length URL. Trust me, it&#39;s a big limitation! (PS, Google now support POST method to allow for up to 16K. But... it&#39;s a POST method...)&lt;/li&gt;
	&lt;li&gt;In the particular case of Google Charts, one must have an internet connection.&lt;/li&gt;
	&lt;li&gt;In the particular case of Google Charts, one must submit data to Google.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Interactive charts&lt;/h4&gt;
Interactive charts are those which react to your commands. These are either JavaScript or Flash based, mostly. They allow for really nice features. Take the following chart as an example: try and &lt;strong&gt;move over with your mouse&lt;/strong&gt;; or &lt;strong&gt;select sections to zoom in&lt;/strong&gt;.

&lt;script src=&#34;http://code.openark.org/blog/wp-content/uploads/2010/03/dygraph-combined.js&#34; type=&#34;text/javascript&#34;&gt;&lt;/script&gt;
&lt;!--[if IE]&gt;&lt;script src=&#34;http://code.openark.org/blog/wp-content/uploads/2010/03/excanvas-min.js&#34;&gt;&lt;/script&gt;&lt; ![endif]--&gt;

&lt;blockquote&gt;
&lt;pre&gt;
&lt;/pre&gt;
&lt;h4&gt;DML&lt;/h4&gt;
&lt;div id=&#34;graphDiv_DML&#34; class=&#34;graphdiv&#34; style=&#34;width: 400px; height: 160px;&#34;&gt;[graphDiv]&lt;/div&gt;
&lt;div id=&#34;labelsDiv_DML&#34; class=&#34;legend&#34;&gt;[labelsDiv]&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;script type=&#34;text/javascript&#34;&gt;// &lt; ![CDATA[&lt;br /&gt;
// &lt; ![CDATA[&lt;br /&gt;
 g_DML = new Dygraph( document.getElementById(&#34;graphDiv_DML&#34;),                         &#34;Date,com_select_psec,com_insert_psec,com_delete_psec,com_update_psec,com_replace_psec\n2009-12-04 15:00:00,113.28,76.54,26.14,29.54,0.00\n2009-12-04 15:10:00,91.51,55.74,30.07,18.13,0.00\n2009-12-04 15:20:00,104.98,57.75,28.26,18.24,0.00\n2009-12-04 15:30:00,110.64,72.17,30.17,27.58,0.00\n2009-12-04 15:40:00,97.79,46.27,29.27,15.91,0.00\n2009-12-04 15:50:00,114.35,61.85,29.55,22.45,0.00\n2009-12-04 16:00:00,110.82,72.38,30.67,30.70,0.00\n2009-12-04 16:10:00,99.05,49.70,29.35,18.56,0.00\n2009-12-04 16:20:00,109.68,50.87,25.74,16.55,0.00\n2009-12-04 16:30:00,103.92,58.70,22.09,22.58,0.00\n2009-12-04 16:40:00,97.24,56.29,31.71,18.78,0.00\n2009-12-04 16:50:00,119.25,65.72,27.80,22.56,0.00\n2009-12-04 17:00:00,118.31,78.34,34.18,30.43,0.00\n2009-12-04 17:10:00,91.06,47.59,29.66,16.60,0.00\n2009-12-04 17:20:00,117.81,59.82,28.94,21.40,0.00\n2009-12-04 17:30:00,109.79,71.37,27.62,27.64,0.00\n2009-12-04 17:40:00,101.07,40.51,29.57,14.18,0.00\n2009-12-04 17:50:00,117.66,61.18,28.31,22.44,0.00\n2009-12-04 18:00:00,115.48,72.82,32.12,28.74,0.00\n2009-12-04 18:10:00,106.51,54.34,32.96,20.37,0.00\n2009-12-04 18:20:00,111.34,65.11,27.60,22.60,0.00\n2009-12-04 18:30:00,109.66,52.25,29.47,18.47,0.00\n2009-12-04 18:40:00,113.63,55.16,28.67,19.98,0.00\n2009-12-04 18:50:00,103.72,51.86,24.67,18.08,0.00\n2009-12-04 19:00:00,111.27,55.78,26.66,22.62,0.00\n2009-12-04 19:10:00,105.73,63.16,35.37,25.88,0.00\n2009-12-04 19:20:00,130.50,60.07,29.82,22.99,0.00\n2009-12-04 19:30:00,110.41,62.64,30.35,24.46,0.00\n2009-12-04 19:40:00,107.05,52.04,27.15,19.22,0.00\n2009-12-04 19:50:00,126.11,57.06,27.12,19.34,0.00\n2009-12-04 20:00:00,111.36,61.40,26.13,25.96,0.00\n2009-12-04 20:10:00,108.82,61.97,29.52,23.49,0.00\n2009-12-04 20:20:00,122.57,59.28,26.03,18.48,0.00\n2009-12-04 20:30:00,109.35,65.42,29.21,23.13,0.00\n2009-12-04 20:40:00,117.19,57.69,28.01,19.24,0.00\n2009-12-04 20:50:00,125.03,61.15,28.95,21.74,0.00\n2009-12-04 21:00:00,118.31,63.11,29.66,23.99,0.00\n2009-12-04 21:10:00,109.98,62.24,38.77,24.02,0.00\n2009-12-04 21:20:00,121.28,57.78,30.48,20.26,0.00\n2009-12-04 21:30:00,113.89,59.62,29.77,23.72,0.00\n2009-12-04 21:40:00,113.93,60.42,29.35,24.71,0.00\n2009-12-04 21:50:00,130.36,55.68,31.94,21.16,0.00\n2009-12-04 22:00:00,114.11,58.93,32.62,24.41,0.00\n2009-12-04 22:10:00,105.52,58.58,26.04,24.47,0.00\n2009-12-04 22:20:00,113.52,57.04,29.26,22.28,0.00\n2009-12-04 22:30:00,132.64,66.22,34.87,26.82,0.00\n2009-12-04 22:40:00,112.08,59.19,27.16,23.73,0.00\n2009-12-04 22:50:00,136.62,59.74,33.41,20.04,0.00\n2009-12-04 23:00:00,119.58,65.67,31.40,24.40,0.00\n2009-12-04 23:10:00,109.12,53.74,28.38,19.60,0.00\n2009-12-04 23:20:00,121.52,60.03,33.16,22.38,0.00\n2009-12-04 23:30:00,123.33,59.59,31.09,22.51,0.00\n2009-12-04 23:40:00,114.75,56.82,25.53,23.43,0.00\n2009-12-04 23:50:00,124.92,51.26,27.86,19.03,0.00\n2009-12-05 00:00:00,88.23,63.21,41.50,18.59,0.00\n2009-12-05 00:10:00,75.10,66.62,29.94,48.01,0.00\n2009-12-05 00:20:00,94.85,49.27,22.05,18.66,0.00\n2009-12-05 00:30:00,80.27,45.21,20.56,17.55,0.00\n2009-12-05 00:40:00,80.96,52.03,21.66,21.14,0.00\n2009-12-05 00:50:00,85.21,57.68,26.57,23.58,0.00\n2009-12-05 01:00:00,88.66,52.56,21.75,20.94,0.00\n2009-12-05 01:10:00,78.66,53.26,22.89,22.36,0.00\n2009-12-05 01:20:00,83.80,50.74,20.65,19.49,0.00\n2009-12-05 01:30:00,82.70,39.99,17.23,15.86,0.00\n2009-12-05 01:40:00,79.66,52.35,23.55,20.94,0.00\n2009-12-05 01:50:00,74.56,47.64,23.05,18.97,0.00\n2009-12-05 02:00:00,81.25,51.35,17.94,21.61,0.00\n2009-12-05 02:10:00,86.83,58.48,25.03,24.95,0.00\n2009-12-05 02:20:00,73.31,41.39,21.09,17.56,0.00\n2009-12-05 02:30:00,82.31,39.70,19.84,16.74,0.00\n2009-12-05 02:40:00,71.19,55.84,19.05,25.97,0.00\n2009-12-05 02:50:00,88.00,44.13,25.32,17.74,0.00\n2009-12-05 03:00:00,84.54,44.78,18.42,18.78,0.00\n2009-12-05 03:10:00,76.92,50.57,17.91,21.81,0.00\n2009-12-05 03:20:00,84.45,49.12,21.54,18.58,0.00\n2009-12-05 03:30:00,89.52,54.20,45.41,22.39,0.00\n2009-12-05 03:40:00,74.15,44.67,26.54,18.04,0.00\n2009-12-05 03:50:00,76.32,44.36,15.02,18.39,0.00\n2009-12-05 04:00:00,83.90,52.30,19.50,22.39,0.00\n2009-12-05 04:10:00,80.26,61.12,20.66,25.68,0.00\n2009-12-05 04:20:00,80.95,42.11,16.95,14.84,0.00\n2009-12-05 04:30:00,93.01,53.36,17.91,21.94,0.00\n2009-12-05 04:40:00,72.70,45.22,16.63,18.16,0.00\n2009-12-05 04:50:00,81.22,44.73,15.41,18.54,0.00\n2009-12-05 05:00:00,80.02,46.60,16.07,21.04,0.00\n2009-12-05 05:10:00,84.33,57.86,21.77,24.71,0.00\n2009-12-05 05:20:00,87.48,60.54,19.66,22.95,0.00\n2009-12-05 05:30:00,86.19,48.62,18.47,17.51,0.00\n2009-12-05 05:40:00,72.92,50.10,18.46,21.00,0.00\n2009-12-05 05:50:00,81.79,48.14,15.75,19.36,0.00\n2009-12-05 06:00:00,83.11,55.70,17.15,23.02,0.00\n2009-12-05 06:10:00,77.98,55.89,18.36,23.16,0.00\n2009-12-05 06:20:00,77.05,45.96,18.06,17.27,0.00\n2009-12-05 06:30:00,87.58,53.76,15.56,20.79,0.00\n2009-12-05 06:40:00,79.33,58.86,21.02,22.84,0.00\n2009-12-05 06:50:00,85.33,49.99,16.23,18.82,0.00\n2009-12-05 07:00:00,87.54,56.70,17.96,23.31,0.00\n2009-12-05 07:10:00,73.33,56.51,17.57,21.74,0.00\n2009-12-05 07:20:00,84.02,52.77,21.21,20.80,0.00\n2009-12-05 07:30:00,88.86,58.34,27.45,23.10,0.00\n2009-12-05 07:40:00,,,,,\n2009-12-05 07:50:00,,,,,\n2009-12-05 08:00:00,,,,,\n2009-12-05 08:10:00,,,,,\n2009-12-05 08:20:00,,,,,\n2009-12-05 08:30:00,,,,,\n2009-12-05 08:40:00,,,,,\n2009-12-05 08:50:00,,,,,\n2009-12-05 09:00:00,,,,,\n2009-12-05 09:10:00,,,,,\n2009-12-05 09:20:00,,,,,\n2009-12-05 09:30:00,,,,,\n2009-12-05 09:40:00,,,,,\n2009-12-05 09:50:00,,,,,\n2009-12-05 10:00:00,,,,,\n2009-12-05 10:10:00,,,,,\n2009-12-05 10:20:00,77.11,55.87,29.31,18.09,0.00\n2009-12-05 10:30:00,85.31,53.70,31.03,18.46,0.00\n2009-12-05 10:40:00,82.72,61.32,26.30,22.98,0.00\n2009-12-05 10:50:00,87.28,46.53,25.04,18.04,0.00\n2009-12-05 11:00:00,92.07,62.62,27.09,25.14,0.00\n2009-12-05 11:10:00,84.59,50.42,25.97,19.96,0.00\n2009-12-05 11:20:00,80.34,49.64,25.75,20.31,0.00\n2009-12-05 11:30:00,103.61,64.36,31.79,24.71,0.00\n2009-12-05 11:40:00,80.03,54.33,33.83,22.37,0.00\n2009-12-05 11:50:00,90.42,48.24,31.26,18.43,0.00\n2009-12-05 12:00:00,92.51,56.34,33.53,22.45,0.00\n2009-12-05 12:10:00,84.34,62.26,22.66,23.31,0.00\n2009-12-05 12:20:00,86.24,51.96,25.69,16.02,0.00\n2009-12-05 12:30:00,92.08,58.61,23.16,19.34,0.00\n2009-12-05 12:40:00,78.48,53.33,22.72,19.51,0.00\n2009-12-05 12:50:00,97.85,57.71,29.80,20.19,0.00\n2009-12-05 13:00:00,89.23,54.84,34.62,20.93,0.00\n2009-12-05 13:10:00,78.92,50.02,22.47,18.19,0.00\n2009-12-05 13:20:00,87.24,50.92,26.37,19.38,0.00\n2009-12-05 13:30:00,96.29,54.78,27.13,20.04,0.00\n2009-12-05 13:40:00,96.39,69.48,30.21,27.19,0.00\n2009-12-05 13:50:00,83.21,55.13,26.48,18.00,0.00\n2009-12-05 14:00:00,97.00,63.61,30.89,22.23,0.00\n2009-12-05 14:10:00,94.65,65.33,33.51,25.04,0.00\n2009-12-05 14:20:00,86.94,58.14,36.10,22.07,0.00\n2009-12-05 14:30:00,91.91,47.25,28.41,14.45,0.00\n2009-12-05 14:40:00,92.55,55.73,29.59,20.69,0.00\n2009-12-05 14:50:00,97.35,58.90,31.63,22.22,0.00\n2009-12-05 15:00:00,97.91,56.09,23.80,21.68,0.00\n&#34;,                         { chartDiv:  document.getElementById(&#34;chartDiv_DML&#34;), labelsDiv: document.getElementById(&#34;labelsDiv_DML&#34;) } ); g_DML.resize(400,160);&lt;br /&gt;
// ]]&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;The above chart is generated with &lt;em&gt;dygraphs&lt;/em&gt;. Since it is embedded within my Wordpress page, the layout is affected by that of my theme. Take a look at this &lt;a href=&#34;http://code.openark.org/blog/wp-content/uploads/2010/03/mycheckpoint_interactive_demo.html&#34;&gt;&lt;strong&gt;example page&lt;/strong&gt;&lt;/a&gt; to see similar charts outside this blog site (Internet Explorer users: Maxmimize/minimize button will not work well for now. And, may I suggest &lt;a href=&#34;http://www.mozilla.com/en-US/firefox&#34;&gt;Mozilla Firefox&lt;/a&gt;?)&lt;a href=&#34;http://code.openark.org/blog/wp-content/uploads/2010/03/mycheckpoint_interactive_demo.html&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Pros and cons of interactive charts&lt;/h4&gt;
&lt;p&gt;Pros&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Can present you with exact values. No more doubt about the &lt;strong&gt;com_replace_psec&lt;/strong&gt; values.&lt;/li&gt;
&lt;li&gt;Can allow for zoom in, zoom out.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cons&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Need supporting platform. The above cannot be viewed by non-JavaScript browsers (cell phones, etc.)&lt;/li&gt;
&lt;li&gt;Browser support is also an issue with JavaScript.&lt;/li&gt;
&lt;li&gt;Emailing such report will result in mail blocking in many companies: mail filters will not allow for JavaScript code to pass.&lt;/li&gt;
&lt;li&gt;Charts are not necessarily self-contained, in terms of the chart entity With Flash charts (e.g. Fusion Charts) this works. But in the above, the legend and scales are outside the image. As such, they cannot be just moved around.&lt;/li&gt;
&lt;li&gt;HTML pages which include such charts &lt;em&gt;can be&lt;/em&gt; self contained. The HTML page can include all the JavaScript dependencies, in addition to the chart generating code. Flash based charts cannot be self contained.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Summary&lt;/h4&gt;
&lt;p&gt;Interactive charts are cool!&lt;/p&gt;
&lt;p&gt;I&#39;m now integrating &lt;a href=&#34;http://www.danvk.org/dygraphs/&#34;&gt;dygraphs&lt;/a&gt; into &lt;em&gt;mycheckpoint&lt;/em&gt; (How nice it is to work with BSD &amp;amp; MIT licenses!). Though I may later switch to &lt;a href=&#34;http://code.google.com/p/flot/&#34;&gt;flot&lt;/a&gt;, interactive charts will be the next standard charting way in &lt;em&gt;mycheckpoint&lt;/em&gt;. I will continue supporting static Google Charts, as follows from the above pros and cons list.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The DB problem inherent to dynamic web pages</title>
      <link>/blog/mysql/the-db-problem-inherent-to-dynamic-web-pages/</link>
      <pubDate>Mon, 20 Jul 2009 13:48:56 +0000</pubDate>
      
      <guid>/blog/mysql/the-db-problem-inherent-to-dynamic-web-pages/</guid>
      <description>&lt;p&gt;When building web sites, a popular demand is a maximum page load time.&lt;/p&gt;
&lt;p&gt;For example, many would require &amp;lt; 0.5 seconds (or even less) for major pages loading time. Of course, there are numerous factors for page load time: network, caching, web servers, scripting language/code, database access and more.&lt;/p&gt;
&lt;p&gt;Naturally I want to discuss the use of database access when creating web pages. I&#39;ll be referring to dynamic web pages, such that are created by common languages as PHP, Java/J2EE, Ruby, ASP(.NET) etc.&lt;/p&gt;
&lt;p&gt;A very common programming style is - what&#39;s called in the Java jargon - using &#34;scriptlets&#34; as in the following JSP page:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
    Time now is &amp;lt;%= new java.util.Date() %&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;The above replaces the &#34;&lt;em&gt;&amp;lt;%= new java.util.Date() %&amp;gt;&lt;/em&gt;&#34; part with a text representation of the current time.&lt;/p&gt;
&lt;p&gt;If I were to produce a dynamic content site, say, a WordPress blog, like the one you&#39;re reading, I would need to generate several dynamic contents: the latest posts, the popular tags, the comments for this post, etc. These are generated by calling upon the database and running some queries. I suppose there&#39;s nothing new in what I&#39;ve explained so far.&lt;/p&gt;
&lt;h4&gt;The problem&lt;/h4&gt;
&lt;p&gt;When generating a &#34;heavyweight&#34; page, like some online newspaper or bookstore, there may be many queries involved. Are you logged in? Do we have recommendations for you? What are the latest topics? What have you been interested in before? Do you have friends online? What content have you produced on the website?&lt;/p&gt;
&lt;p&gt;&lt;!--more--&gt;I&#39;ve recently reviewed a site which generated &amp;gt; 500 queries per single page. I personally thought that was a very high number, but that was a necessity. The problem was: the page took 2 seconds to load.&lt;/p&gt;
&lt;p&gt;Some tuning, rewriting and indexing later, time dropped to 0.6 seconds to load; but that was not fast enough. It was then that we got to a major conclusion:&lt;/p&gt;
&lt;blockquote&gt;All database calls are serialized. They need to be parallelized.&lt;/blockquote&gt;
&lt;p&gt;Remember that MySQL can only utilize a single thread for the computation of a single query (though more threads can handle IO in the meantime). This leads to only one CPU being used on your standard Linux distribution, for a given web page.&lt;/p&gt;
&lt;p&gt;Really, that sounds just too obvious! But not so easy to achieve when doing &#34;scriptlets&#34;. The templating engine parses the scriptlets one by one, executing them in order. In fact, you assume it does so, so that you can rely on the outcome of the previous scriptlet in the next one. In Java, for example, it goes beyond that: a JSP page is rewritten as a normal Java Servlet class, where the &#34;scriptlets&#34; become the main code, and the HTML becomes just printing to standard output. So you get linear executing code.&lt;/p&gt;
&lt;p&gt;Even with more sophisticated frameworks, the &#34;normal&#34; way of doing things is linear. For example, using the Spring framework, you have Java objects -- controllers -- which are responsible for web pages. You can avoid doing scpriting within your dynamic web pages, and only ask for data provided by those controllers. So, for example, using &lt;a href=&#34;http://www.springsource.org/&#34;&gt;Spring&lt;/a&gt; + &lt;a href=&#34;http://velocity.apache.org/&#34;&gt;Velocity&lt;/a&gt;, a web page could look like this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
    Login time as recorded in DB is: ${user.loginTime}
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;This (usually) translates to calling the &lt;em&gt;getLoginTime()&lt;/em&gt; method on a pre-built &lt;em&gt;user&lt;/em&gt; object. But just how does this method work?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Does it do lazy initialization, so that it calls upon the DB to get the answer?&lt;/li&gt;
&lt;li&gt;Did the controller set up the value during some init() method?&lt;/li&gt;
&lt;li&gt;Did the controller set up the value in response to the web page&#39;s request parameter, parsing them one by one?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All the above options lead to linear, or serial execution.&lt;/p&gt;
&lt;h4&gt;How to parallelize?&lt;/h4&gt;
&lt;p&gt;Parallelization with web pages is not so simple, and requires understanding of multi threading programming. The programmer needs to be aware of race conditions, deadlocks, starvation issues, etc. (though, to be honest, in dynamic web pages context these do not usually become a real issue). Some programming languages provide good support for multi threaded programming. Java is one such language.&lt;/p&gt;
&lt;p&gt;Let&#39;s assume, then, that we need to spawn some 10 queries in response to a page request. With Jjava, we can write something like:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;CountDownLatch doneSignal = &lt;strong&gt;new&lt;/strong&gt; CountDownLatch(10);

Runnable task1 = &lt;strong&gt;new&lt;/strong&gt; Runnable() {
    &lt;strong&gt;public&lt;/strong&gt; &lt;strong&gt;void&lt;/strong&gt; run()
    {
        user.setLoginTime(&lt;strong&gt;this&lt;/strong&gt;.jdbcTemplate.queryForInt(&#34;SELECT ... FROM ...&#34;));
        doneSignal.countDown();
    }
} ;

Runnable task2 = &lt;strong&gt;new&lt;/strong&gt; Runnable() {
    &lt;strong&gt;public&lt;/strong&gt; &lt;strong&gt;void&lt;/strong&gt; run()
    {
        headlines = getSimpleJdbcTemplate().query(&#34;SELECT * FROM headline WHERE...&#34;,
            &lt;strong&gt;new&lt;/strong&gt; ParameterizedRowMapper&amp;lt;Headline&amp;gt;() {
                &lt;strong&gt;public&lt;/strong&gt; Headline mapRow(ResultSet rs, &lt;strong&gt;int&lt;/strong&gt; rowNum)
                {
                    Headline headline = &lt;strong&gt;new&lt;/strong&gt; Headline();
                    headline.setTitle(rs.getString(&#34;title&#34;);
                    headline.setUrl(rs.getString(&#34;url&#34;);
                    ...
                }
            }
        doneSignal.countDown();
    }
} ;

...

Runnable task10 = &lt;strong&gt;new&lt;/strong&gt; Runnable() {
    ...
    doneSignal.countDown();
}
Executor executor = Executors.newFixedThreadPool(numberOfAvailableProcessors);
executor.execute(task1);
...
executor.execute(task10);

doneSignal.await();

// Now fill in the Model&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;The above code is simplified and presented in a way which is more readable. What it says is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Let&#39;s create the 10 tasks, but not execute them: just lay out the commands.&lt;/li&gt;
&lt;li&gt;Each task, upon completion, lets the &lt;strong&gt;CountDownLatch&lt;/strong&gt; know it has completed (but remeber we have not executed it yet).&lt;/li&gt;
&lt;li&gt;We create or use a thread pool, using some &lt;em&gt;n&lt;/em&gt; threads; &lt;em&gt;n&lt;/em&gt; may relate to the number of processors we have.&lt;/li&gt;
&lt;li&gt;We ask the pool to execute all threads. At the discretion of the pool, it will either run them all concurrently, or some sequentially - depending on how many threads are available.&lt;/li&gt;
&lt;li&gt;We ask the &lt;strong&gt;CountDownLatch&lt;/strong&gt; -- a one-time &lt;em&gt;barrier&lt;/em&gt; -- to block, until all 10 tasks have notified they&#39;re done.&lt;/li&gt;
&lt;li&gt;We can now go on and do our stuff.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Spring has a built in &lt;a href=&#34;http://static.springsource.org/spring/docs/2.5.x/reference/scheduling.html#scheduling-task-executor&#34;&gt;TaskExecutor&lt;/a&gt; mechanism to provide solution similar to the thread pool above.&lt;/p&gt;
&lt;p&gt;I&#39;m mostly a C/C++/Java programmer; I have no knowledge on how this can be achieved in PHP, Ruby, ASP.NET or other languages. The above code is certainly not the most straightforward to use. I would like to see frameworks provide wrappers for this kind of solution, so as to support the common web developer with parallelization.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>